
****************************************
******** Type 1 clone detection ********
****************************************
*****************************
** Clone percentage
** 53.65853659%
*****************************
** Number of clone classes:
** 3
*****************************
** Number of clones:
** 6
*****************************
** Size (SLOC) of largest clone: 
** 11
*****************************
** The largest clones:
** {|project://DifferentTypesProject/src/org/main/a/Type1CloneConstruct.java|(119,200,<8,2>,<19,3>),|project://DifferentTypesProject/src/org/main/a/Type1CloneConstruct.java|(389,200,<25,2>,<36,3>)}
** The largest clones in code:
** 
** largest clone number: 1
** for (int i = 0 ; i < x ; x = x + y, y = x + y) {
			if (x > y) {
				continue;
			} else if (x * y > x || true) {
				throw new OutOfMemoryError(u);
			}
			else {
				x = y >> x;
				break;
			}

		}
**

** largest clone number: 2
** for (int i = 0 ; i < x ; x = x + y, y = x + y) {
			if (x > y) {
				continue;
			} else if (x * y > x || true) {
				throw new OutOfMemoryError(u);
			}
			else {
				x = y >> x;
				break;
			}

		}
**

*****************************
** The largest clone classes in SLOC:
** 22
*****************************
** The largest clone classes (loc):
** {[|project://DifferentTypesProject/src/org/main/a/Type1CloneConstruct.java|(119,200,<8,2>,<19,3>),|project://DifferentTypesProject/src/org/main/a/Type1CloneConstruct.java|(389,200,<25,2>,<36,3>)]}
*****************************
** The largest clone classes in code:
** 
** largest clone class number: 1
** for (int i = 0 ; i < x ; x = x + y, y = x + y) {
			if (x > y) {
				continue;
			} else if (x * y > x || true) {
				throw new OutOfMemoryError(u);
			}
			else {
				x = y >> x;
				break;
			}

		}
**
for (int i = 0 ; i < x ; x = x + y, y = x + y) {
			if (x > y) {
				continue;
			} else if (x * y > x || true) {
				throw new OutOfMemoryError(u);
			}
			else {
				x = y >> x;
				break;
			}

		}
**

*****************************
 
==============================================
====== Start of clone classes printing ======= 
======             Type: 1             ======= 
==============================================
=-=-=-=-=-= Clone Class =-=-=-=-=-=-=
Location: |project://DifferentTypesProject/src/org/main/a/Type2Clone.java|(316,156,<15,30>,<16,90>)
```
 Arrays.asList(new String("Tom Jones"), new String("Harry Major"),
				new String("Ethan Hardy"), new String("Nancy Smith"), new String("Deborah Sprightly"))
```
Location: |project://DifferentTypesProject/src/org/main/a/Type2Clone.java|(688,156,<27,19>,<28,63>)
```
 Arrays.asList(new String("Tom Jones"), new String("Harry Major"), new String("Ethan Hardy"),
				new String("Nancy Smith"), new String("Deborah Sprightly"))
```

=-=-=-=-=-= Clone Class =-=-=-=-=-=-=
Location: |project://DifferentTypesProject/src/org/main/a/Type1CloneConstruct.java|(119,200,<8,2>,<19,3>)
```
 for (int i = 0 ; i < x ; x = x + y, y = x + y) {
			if (x > y) {
				continue;
			} else if (x * y > x || true) {
				throw new OutOfMemoryError(u);
			}
			else {
				x = y >> x;
				break;
			}

		}
```
Location: |project://DifferentTypesProject/src/org/main/a/Type1CloneConstruct.java|(389,200,<25,2>,<36,3>)
```
 for (int i = 0 ; i < x ; x = x + y, y = x + y) {
			if (x > y) {
				continue;
			} else if (x * y > x || true) {
				throw new OutOfMemoryError(u);
			}
			else {
				x = y >> x;
				break;
			}

		}
```

=-=-=-=-=-= Clone Class =-=-=-=-=-=-=
Location: |project://DifferentTypesProject/src/org/main/a/OverFile1Type1.java|(115,150,<6,60>,<14,2>)
```
 {
		if (x + y > 3 || x + y < -2) {
			System.exit(10);
			return new Integer(0);
		} else {
			Thread.sleep(1337);
			return new Error("oeps");
		}
	}
```
Location: |project://DifferentTypesProject/src/org/main/a/OverFile2Type1.java|(113,154,<5,60>,<15,2>)
```
 {
		if (x + y > 3 || x + y < -2) {
			System.exit(10);
			return new Integer(0);

		} else {
			Thread.sleep(1337);
			return new Error("oeps");
		}
		
	}
```


****************************************
******** Type 2 clone detection ********
****************************************
*****************************
** Clone percentage
** 53.65853659%
*****************************
** Number of clone classes:
** 2
*****************************
** Number of clones:
** 4
*****************************
** Size (SLOC) of largest clone: 
** 12
*****************************
** The largest clones:
** {|project://DifferentTypesProject/src/org/main/a/OverFile1Type1.java|(0,269,<1,0>,<16,2>),|project://DifferentTypesProject/src/org/main/a/OverFile2Type1.java|(0,271,<1,0>,<17,2>)}
** The largest clones in code:
** 
** largest clone number: 1
** package org.main.a;

public class OverFile1Type1 {
	
	
	public static Object f (short x, byte y ) throws Throwable {
		if (x + y > 3 || x + y < -2) {
			System.exit(10);
			return new Integer(0);
		} else {
			Thread.sleep(1337);
			return new Error("oeps");
		}
	}

}

**

** largest clone number: 2
** package org.main.a;

public class OverFile2Type1 {
	
	public static Object f (short x, byte y ) throws Throwable {
		if (x + y > 3 || x + y < -2) {
			System.exit(10);
			return new Integer(0);

		} else {
			Thread.sleep(1337);
			return new Error("oeps");
		}
		
	}

}

**

*****************************
** The largest clone classes in SLOC:
** 24
*****************************
** The largest clone classes (loc):
** {[|project://DifferentTypesProject/src/org/main/a/OverFile1Type1.java|(0,269,<1,0>,<16,2>),|project://DifferentTypesProject/src/org/main/a/OverFile2Type1.java|(0,271,<1,0>,<17,2>)]}
*****************************
** The largest clone classes in code:
** 
** largest clone class number: 1
** package org.main.a;

public class OverFile1Type1 {
	
	
	public static Object f (short x, byte y ) throws Throwable {
		if (x + y > 3 || x + y < -2) {
			System.exit(10);
			return new Integer(0);
		} else {
			Thread.sleep(1337);
			return new Error("oeps");
		}
	}

}

**
package org.main.a;

public class OverFile2Type1 {
	
	public static Object f (short x, byte y ) throws Throwable {
		if (x + y > 3 || x + y < -2) {
			System.exit(10);
			return new Integer(0);

		} else {
			Thread.sleep(1337);
			return new Error("oeps");
		}
		
	}

}

**

*****************************
 
==============================================
====== Start of clone classes printing ======= 
======             Type: 2             ======= 
==============================================
=-=-=-=-=-= Clone Class =-=-=-=-=-=-=
Location: |project://DifferentTypesProject/src/org/main/a/Type2Clone.java|(192,395,<11,1>,<21,2>)
```
 long f() {
		Function<String, String> funcEmpToString = (String s) -> {
			return s + s;
		};
		List<String> employeeList = Arrays.asList(new String("Tom Jones"), new String("Harry Major"),
				new String("Ethan Hardy"), new String("Nancy Smith"), new String("Deborah Sprightly"));
		List<String> empNameList = Collections.emptyList();
		empNameList.forEach(System.out::println);

		return 1;
	}
```
Location: |project://DifferentTypesProject/src/org/main/a/Type2Clone.java|(590,351,<23,1>,<33,2>)
```
 int g() {
		Function<String, String> f = (String e) -> {
			return e + e;
		};
		List<String> l = Arrays.asList(new String("Tom Jones"), new String("Harry Major"), new String("Ethan Hardy"),
				new String("Nancy Smith"), new String("Deborah Sprightly"));
		List<String> l2 = Collections.emptyList();
		l2.forEach(System.out::println);

		return 1;
	}
```

=-=-=-=-=-= Clone Class =-=-=-=-=-=-=
Location: |project://DifferentTypesProject/src/org/main/a/OverFile1Type1.java|(0,269,<1,0>,<16,2>)
```
 package org.main.a;

public class OverFile1Type1 {
	
	
	public static Object f (short x, byte y ) throws Throwable {
		if (x + y > 3 || x + y < -2) {
			System.exit(10);
			return new Integer(0);
		} else {
			Thread.sleep(1337);
			return new Error("oeps");
		}
	}

}

```
Location: |project://DifferentTypesProject/src/org/main/a/OverFile2Type1.java|(0,271,<1,0>,<17,2>)
```
 package org.main.a;

public class OverFile2Type1 {
	
	public static Object f (short x, byte y ) throws Throwable {
		if (x + y > 3 || x + y < -2) {
			System.exit(10);
			return new Integer(0);

		} else {
			Thread.sleep(1337);
			return new Error("oeps");
		}
		
	}

}

```


****************************************
******** Type 3 clone detection ********
****************************************
*****************************
** Clone percentage
** 0.%
*****************************
** Number of clone classes:
** 0
*****************************
** Number of clones:
** 0
*****************************
** Size (SLOC) of largest clone: 
** 0
*****************************
** The largest clones:
** {}
** The largest clones in code:
** 
*****************************
** The largest clone classes in SLOC:
** 0
*****************************
** The largest clone classes (loc):
** {}
*****************************
** The largest clone classes in code:
** 
*****************************
 
==============================================
====== Start of clone classes printing ======= 
======             Type: 3             ======= 
==============================================
