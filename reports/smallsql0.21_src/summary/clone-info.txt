
 
==============================================
====== Start of clone classes printing ======= 
======             Type: 1             ======= 
==============================================
=-=-=-=-=-= Clone Class =-=-=-=-=-=-=
Location: |project://smallsql0.21_src/src/smallsql/database/ExpressionFunctionTruncate.java|(1645,311,<46,2>,<60,3>)
```
 if(isNull()) return 0;
		final int places = param2.getInt();
		double value = param1.getDouble();
		long factor = 1;
		if(places > 0){
			for(int i=0; i<places; i++){
				factor *= 10;
			}
			value *= factor;
		}else{
			for(int i=0; i>places; i--){
				factor *= 10;
			}
			value /= factor;
		}
```
Location: |project://smallsql0.21_src/src/smallsql/database/ExpressionFunctionRound.java|(1636,311,<46,2>,<60,3>)
```
 if(isNull()) return 0;
		final int places = param2.getInt();
		double value = param1.getDouble();
		long factor = 1;
		if(places > 0){
			for(int i=0; i<places; i++){
				factor *= 10;
			}
			value *= factor;
		}else{
			for(int i=0; i>places; i--){
				factor *= 10;
			}
			value /= factor;
		}
```

=-=-=-=-=-= Clone Class =-=-=-=-=-=-=
Location: |project://smallsql0.21_src/src/smallsql/junit/TestJoins.java|(6284,837,<128,69>,<156,5>)
```
 {
            pr.setObject( 1, testValue.small);
            pr.setObject( 2, testValue.large);
            pr.execute();

            pr.setObject( 1, testValue.small);
            pr.setObject( 2, testValue.small);
            pr.execute();

            pr.setObject( 1, testValue.large);
            pr.setObject( 2, testValue.large);
            pr.execute();

            pr.setObject( 1, testValue.large);
            pr.setObject( 2, testValue.small);
            pr.execute();

            pr.setObject( 1, null);
            pr.setObject( 2, testValue.small);
            pr.execute();

            pr.setObject( 1, testValue.small);
            pr.setObject( 2, null);
            pr.execute();

            pr.setObject( 1, null);
            pr.setObject( 2, null);
            pr.execute();
    }
```
Location: |project://smallsql0.21_src/src/smallsql/junit/TestOperatoren.java|(5879,815,<115,12>,<141,25>)
```
 pr.setObject( 1, testValue.small);
            pr.setObject( 2, testValue.large);
            pr.execute();

            pr.setObject( 1, testValue.small);
            pr.setObject( 2, testValue.small);
            pr.execute();

            pr.setObject( 1, testValue.large);
            pr.setObject( 2, testValue.large);
            pr.execute();

            pr.setObject( 1, testValue.large);
            pr.setObject( 2, testValue.small);
            pr.execute();

            pr.setObject( 1, null);
            pr.setObject( 2, testValue.small);
            pr.execute();

            pr.setObject( 1, testValue.small);
            pr.setObject( 2, null);
            pr.execute();

            pr.setObject( 1, null);
            pr.setObject( 2, null);
            pr.execute();
```

=-=-=-=-=-= Clone Class =-=-=-=-=-=-=
Location: |project://smallsql0.21_src/src/smallsql/database/Database.java|(13990,89,<395,2>,<397,16>)
```
 Object[][] result = new Object[rows.size()][];
		rows.toArray(result);
		return result;
```
Location: |project://smallsql0.21_src/src/smallsql/database/Database.java|(15775,89,<438,2>,<440,16>)
```
 Object[][] result = new Object[rows.size()][];
		rows.toArray(result);
		return result;
```
Location: |project://smallsql0.21_src/src/smallsql/database/Database.java|(17183,89,<474,2>,<476,16>)
```
 Object[][] result = new Object[rows.size()][];
		rows.toArray(result);
		return result;
```
Location: |project://smallsql0.21_src/src/smallsql/database/Database.java|(18207,89,<505,2>,<507,16>)
```
 Object[][] result = new Object[rows.size()][];
		rows.toArray(result);
		return result;
```
Location: |project://smallsql0.21_src/src/smallsql/database/Database.java|(19524,89,<542,2>,<544,16>)
```
 Object[][] result = new Object[rows.size()][];
		rows.toArray(result);
		return result;
```

=-=-=-=-=-= Clone Class =-=-=-=-=-=-=
Location: |project://smallsql0.21_src/src/smallsql/database/SmallSQLException.java|(4596,127,<145,5>,<146,57>)
```
 String message = translateMsg(messageCode, new Object[] { param0 });
    	String sqlState = language.getSqlState(messageCode);
```
Location: |project://smallsql0.21_src/src/smallsql/database/SmallSQLException.java|(5993,127,<182,5>,<183,57>)
```
 String message = translateMsg(messageCode, new Object[] { param0 });
    	String sqlState = language.getSqlState(messageCode);
```

=-=-=-=-=-= Clone Class =-=-=-=-=-=-=
Location: |project://smallsql0.21_src/src/smallsql/database/Database.java|(14353,129,<405,6>,<407,40>)
```
 String tableName = tables.get(t);
    		TableView tab = getTableView( con, tableName);
			if(!(tab instanceof Table)) continue;
```
Location: |project://smallsql0.21_src/src/smallsql/database/Database.java|(16080,129,<448,6>,<450,40>)
```
 String tableName = tables.get(t);
    		TableView tab = getTableView( con, tableName);
			if(!(tab instanceof Table)) continue;
```
Location: |project://smallsql0.21_src/src/smallsql/database/Database.java|(17481,129,<484,6>,<486,40>)
```
 String tableName = tables.get(t);
    		TableView tab = getTableView( con, tableName);
			if(!(tab instanceof Table)) continue;
```
Location: |project://smallsql0.21_src/src/smallsql/database/Database.java|(18590,129,<516,6>,<518,40>)
```
 String tableName = tables.get(t);
    		TableView tab = getTableView( con, tableName);
			if(!(tab instanceof Table)) continue;
```

=-=-=-=-=-= Clone Class =-=-=-=-=-=-=
Location: |project://smallsql0.21_src/src/smallsql/junit/BenchTest.java|(4917,271,<119,12>,<124,23>)
```
 rs.next();
            int count = rs.getInt(1);
            if (count != rowCount)
                System.out.println( "  Failed: Only " + count + " rows were inserted.");
            else System.out.println( "  Test time: " + time + " ms");
            st.close();
```
Location: |project://smallsql0.21_src/src/smallsql/junit/BenchTest.java|(7150,272,<178,12>,<183,23>)
```
 rs.next();
            int count = rs.getInt(1);
            if (count != rowCount)
                 System.out.println( "  Failed: Only " + count + " rows were inserted.");
            else System.out.println( "  Test time: " + time + " ms");
            st.close();
```

=-=-=-=-=-= Clone Class =-=-=-=-=-=-=
Location: |project://smallsql0.21_src/src/smallsql/junit/BenchTest.java|(26779,249,<629,12>,<634,26>)
```
 pr.close();
            time += System.currentTimeMillis();
            System.out.println( "  Test time: " + time + " ms");
            fis.close();
            java.io.File file = new java.io.File(tableName+".bin");
            file.delete();
```
Location: |project://smallsql0.21_src/src/smallsql/junit/BenchTest.java|(28455,249,<670,12>,<675,26>)
```
 pr.close();
            time += System.currentTimeMillis();
            System.out.println( "  Test time: " + time + " ms");
            fis.close();
            java.io.File file = new java.io.File(tableName+".bin");
            file.delete();
```

=-=-=-=-=-= Clone Class =-=-=-=-=-=-=
Location: |project://smallsql0.21_src/src/smallsql/database/StoreImpl.java|(5824,181,<135,25>,<139,21>)
```
 {
                        store.page = storePage.page;
                        store.sharedPageData = true;
                        store.readPageHeader();
                    }
```
Location: |project://smallsql0.21_src/src/smallsql/database/StoreImpl.java|(6590,87,<157,2>,<159,25>)
```
 store.page = storePage.page;
		store.sharedPageData = true;
		store.readPageHeader();
```

=-=-=-=-=-= Clone Class =-=-=-=-=-=-=
Location: |project://smallsql0.21_src/src/smallsql/junit/TestResultSet.java|(2976,966,<85,8>,<107,48>)
```
 assertEquals("getRow", 1, rs.getRow() );
        assertTrue("isLast", rs.isLast() );
        assertFalse("next", rs.next() );
        assertFalse("isBeforeFirst", rs.isBeforeFirst() );
        assertTrue("isAfterLast", rs.isAfterLast() );
        assertEquals("getRow", 0, rs.getRow() );
        
        assertTrue("first", rs.first() );
        assertEquals("getRow", 1, rs.getRow() );
        
        assertFalse("previous", rs.previous() );
        assertEquals("getRow", 0, rs.getRow() );
        assertTrue("isBeforeFirst", rs.isBeforeFirst() );
        assertFalse("isAfterLast", rs.isAfterLast() );
        
        assertTrue("last", rs.last() );
        assertEquals("getRow", 1, rs.getRow() );
        assertTrue("isLast", rs.isLast() );
        
        rs.afterLast();
        assertFalse("isBeforeFirst", rs.isBeforeFirst() );
        assertTrue("isAfterLast", rs.isAfterLast() );
        assertEquals("getRow", 0, rs.getRow() );
```
Location: |project://smallsql0.21_src/src/smallsql/junit/TestResultSet.java|(4893,966,<128,8>,<150,48>)
```
 assertEquals("getRow", 1, rs.getRow() );
        assertTrue("isLast", rs.isLast() );
        assertFalse("next", rs.next() );
        assertFalse("isBeforeFirst", rs.isBeforeFirst() );
        assertTrue("isAfterLast", rs.isAfterLast() );
        assertEquals("getRow", 0, rs.getRow() );
        
        assertTrue("first", rs.first() );
        assertEquals("getRow", 1, rs.getRow() );
        
        assertFalse("previous", rs.previous() );
        assertEquals("getRow", 0, rs.getRow() );
        assertTrue("isBeforeFirst", rs.isBeforeFirst() );
        assertFalse("isAfterLast", rs.isAfterLast() );
        
        assertTrue("last", rs.last() );
        assertEquals("getRow", 1, rs.getRow() );
        assertTrue("isLast", rs.isLast() );
        
        rs.afterLast();
        assertFalse("isBeforeFirst", rs.isBeforeFirst() );
        assertTrue("isAfterLast", rs.isAfterLast() );
        assertEquals("getRow", 0, rs.getRow() );
```

=-=-=-=-=-= Clone Class =-=-=-=-=-=-=
Location: |project://smallsql0.21_src/src/smallsql/junit/TestOrderBy.java|(17695,140,<666,47>,<671,3>)
```
 {
			String newValue = rs.getString("c2");
			assertTrue( oldValue.compareTo( newValue ) < 0 );
			oldValue = newValue;
			count++;
		}
```
Location: |project://smallsql0.21_src/src/smallsql/junit/TestOrderBy.java|(18217,132,<686,4>,<689,12>)
```
 String newValue = rs.getString("c2");
				assertTrue( oldValue.compareTo( newValue ) < 0 );
				oldValue = newValue;
				count++;
```

=-=-=-=-=-= Clone Class =-=-=-=-=-=-=
Location: |project://smallsql0.21_src/src/smallsql/junit/TestDBMetaData.java|(8130,302,<182,8>,<182,310>)
```
 String[] colNames = {"TABLE_CAT", "TABLE_SCHEM", "TABLE_NAME", "COLUMN_NAME", "DATA_TYPE", "TYPE_NAME", "COLUMN_SIZE", "BUFFER_LENGTH", "DECIMAL_DIGITS", "NUM_PREC_RADIX", "NULLABLE", "REMARKS", "COLUMN_DEF", "SQL_DATA_TYPE", "SQL_DATETIME_SUB", "CHAR_OCTET_LENGTH", "ORDINAL_POSITION", "IS_NULLABLE"};
```
Location: |project://smallsql0.21_src/src/smallsql/database/SSDatabaseMetaData.java|(16365,302,<753,3>,<753,305>)
```
 String[] colNames = {"TABLE_CAT", "TABLE_SCHEM", "TABLE_NAME", "COLUMN_NAME", "DATA_TYPE", "TYPE_NAME", "COLUMN_SIZE", "BUFFER_LENGTH", "DECIMAL_DIGITS", "NUM_PREC_RADIX", "NULLABLE", "REMARKS", "COLUMN_DEF", "SQL_DATA_TYPE", "SQL_DATETIME_SUB", "CHAR_OCTET_LENGTH", "ORDINAL_POSITION", "IS_NULLABLE"};
```

=-=-=-=-=-= Clone Class =-=-=-=-=-=-=
Location: |project://smallsql0.21_src/src/smallsql/junit/TestOrderBy.java|(9886,128,<356,2>,<360,15>)
```
 init();
		Connection con = AllTests.getConnection();
		Statement st = con.createStatement();
		ResultSet rs;
		int oldValue;
```
Location: |project://smallsql0.21_src/src/smallsql/junit/TestOrderBy.java|(10511,128,<382,2>,<386,15>)
```
 init();
		Connection con = AllTests.getConnection();
		Statement st = con.createStatement();
		ResultSet rs;
		int oldValue;
```

=-=-=-=-=-= Clone Class =-=-=-=-=-=-=
Location: |project://smallsql0.21_src/src/smallsql/junit/TestDBMetaData.java|(11286,231,<234,8>,<234,239>)
```
 String[] colNames = {"PKTABLE_CAT", "PKTABLE_SCHEM", "PKTABLE_NAME", "PKCOLUMN_NAME", "FKTABLE_CAT", "FKTABLE_SCHEM", "FKTABLE_NAME", "FKCOLUMN_NAME", "KEY_SEQ", "UPDATE_RULE", "DELETE_RULE", "FK_NAME", "PK_NAME", "DEFERRABILITY"};
```
Location: |project://smallsql0.21_src/src/smallsql/database/SSDatabaseMetaData.java|(19973,231,<821,3>,<821,234>)
```
 String[] colNames = {"PKTABLE_CAT", "PKTABLE_SCHEM", "PKTABLE_NAME", "PKCOLUMN_NAME", "FKTABLE_CAT", "FKTABLE_SCHEM", "FKTABLE_NAME", "FKCOLUMN_NAME", "KEY_SEQ", "UPDATE_RULE", "DELETE_RULE", "FK_NAME", "PK_NAME", "DEFERRABILITY"};
```

=-=-=-=-=-= Clone Class =-=-=-=-=-=-=
Location: |project://smallsql0.21_src/src/smallsql/junit/TestOrderBy.java|(4392,114,<134,3>,<136,11>)
```
 assertTrue( oldValue + "<" + newValue, oldValue.compareTo( newValue ) < 0 );
			oldValue = newValue;
			count++;
```
Location: |project://smallsql0.21_src/src/smallsql/junit/TestOrderBy.java|(5079,114,<162,3>,<164,11>)
```
 assertTrue( oldValue + "<" + newValue, oldValue.compareTo( newValue ) < 0 );
			oldValue = newValue;
			count++;
```

=-=-=-=-=-= Clone Class =-=-=-=-=-=-=
Location: |project://smallsql0.21_src/src/smallsql/junit/TestDBMetaData.java|(4639,196,<103,8>,<103,204>)
```
 String[] colNames = {"PROCEDURE_CAT", "PROCEDURE_SCHEM", "PROCEDURE_NAME", "COLUMN_NAME", "COLUMN_TYPE", "DATA_TYPE", "TYPE_NAME", "PRECISION", "LENGTH", "SCALE", "RADIX", "NULLABLE", "REMARKS" };
```
Location: |project://smallsql0.21_src/src/smallsql/database/SSDatabaseMetaData.java|(13265,196,<671,2>,<671,198>)
```
 String[] colNames = {"PROCEDURE_CAT", "PROCEDURE_SCHEM", "PROCEDURE_NAME", "COLUMN_NAME", "COLUMN_TYPE", "DATA_TYPE", "TYPE_NAME", "PRECISION", "LENGTH", "SCALE", "RADIX", "NULLABLE", "REMARKS" };
```

=-=-=-=-=-= Clone Class =-=-=-=-=-=-=
Location: |project://smallsql0.21_src/src/smallsql/junit/TestOperatoren.java|(3836,92,<74,8>,<74,100>)
```
 a("datetime"          , new Timestamp(99, 1,1,0,0,0,0),      new Timestamp(99, 2,2,0,0,0,0))
```
Location: |project://smallsql0.21_src/src/smallsql/junit/TestJoins.java|(3851,92,<76,8>,<76,100>)
```
 a("datetime"          , new Timestamp(99, 1,1,0,0,0,0),      new Timestamp(99, 2,2,0,0,0,0))
```

=-=-=-=-=-= Clone Class =-=-=-=-=-=-=
Location: |project://smallsql0.21_src/src/smallsql/junit/TestOrderBy.java|(13975,129,<520,2>,<524,16>)
```
 init();
		Connection con = AllTests.getConnection();
		Statement st = con.createStatement();
		ResultSet rs;
		Long oldValue;
```
Location: |project://smallsql0.21_src/src/smallsql/junit/TestOrderBy.java|(14637,129,<546,2>,<550,16>)
```
 init();
		Connection con = AllTests.getConnection();
		Statement st = con.createStatement();
		ResultSet rs;
		Long oldValue;
```

=-=-=-=-=-= Clone Class =-=-=-=-=-=-=
Location: |project://smallsql0.21_src/src/smallsql/database/MutableNumeric.java|(13078,102,<474,16>,<475,80>)
```
 // simple Long Value
                long temp = (((long)value[0]) << 32) | (value[1] & 0xFFFFFFFFL);
```
Location: |project://smallsql0.21_src/src/smallsql/database/MutableNumeric.java|(14192,102,<503,16>,<504,80>)
```
 // simple Long Value
                long temp = (((long)value[0]) << 32) | (value[1] & 0xFFFFFFFFL);
```
Location: |project://smallsql0.21_src/src/smallsql/database/MutableNumeric.java|(15105,102,<526,16>,<527,80>)
```
 // simple Long Value
                long temp = (((long)value[0]) << 32) | (value[1] & 0xFFFFFFFFL);
```
Location: |project://smallsql0.21_src/src/smallsql/database/MutableNumeric.java|(16051,102,<550,16>,<551,80>)
```
 // simple Long Value
                long temp = (((long)value[0]) << 32) | (value[1] & 0xFFFFFFFFL);
```

=-=-=-=-=-= Clone Class =-=-=-=-=-=-=
Location: |project://smallsql0.21_src/src/smallsql/junit/TestAlterTable2.java|(1346,312,<45,8>,<48,79>)
```
 st.execute("alter table "+table+" add b varchar(4) primary key");
        ResultSet rs = st.executeQuery("Select * From " + table);
        assertRSMetaData( rs, new String[]{"a", "b"},  new int[]{Types.VARCHAR, Types.VARCHAR} );
        rs = con.getMetaData().getIndexInfo( null, null, table, false, false );
```
Location: |project://smallsql0.21_src/src/smallsql/junit/TestAlterTable2.java|(2694,312,<75,8>,<78,79>)
```
 st.execute("alter table "+table+" add b varchar(4) primary key");
        ResultSet rs = st.executeQuery("Select * From " + table);
        assertRSMetaData( rs, new String[]{"a", "b"},  new int[]{Types.VARCHAR, Types.VARCHAR} );
        rs = con.getMetaData().getIndexInfo( null, null, table, false, false );
```

=-=-=-=-=-= Clone Class =-=-=-=-=-=-=
Location: |project://smallsql0.21_src/src/smallsql/junit/TestLanguage.java|(7213,140,<241,4>,<244,5>)
```
 for (Iterator itr = diff.iterator(); itr.hasNext(); ) {
					msgBuf.append(itr.next());
					if (itr.hasNext()) msgBuf.append(',');
				}
```
Location: |project://smallsql0.21_src/src/smallsql/junit/TestLanguage.java|(7728,182,<255,16>,<258,17>)
```
 for (Iterator itr = diff.iterator(); itr.hasNext(); ) {
                    msgBuf.append(itr.next());
                    if (itr.hasNext()) msgBuf.append(',');
                }
```

=-=-=-=-=-= Clone Class =-=-=-=-=-=-=
Location: |project://smallsql0.21_src/src/smallsql/database/CommandSelect.java|(13159,87,<418,8>,<418,95>)
```
 src != null && (!(src instanceof ExpressionValue) || !((ExpressionValue)src).isEmpty())
```
Location: |project://smallsql0.21_src/src/smallsql/database/CommandSelect.java|(14713,87,<462,8>,<462,95>)
```
 src != null && (!(src instanceof ExpressionValue) || !((ExpressionValue)src).isEmpty())
```

=-=-=-=-=-= Clone Class =-=-=-=-=-=-=
Location: |project://smallsql0.21_src/src/smallsql/junit/TestStatement.java|(10251,261,<261,8>,<265,29>)
```
 rs = pr.getGeneratedKeys();
        assertNotNull("RETURN_GENERATED_KEYS", rs);
        assertEquals("ColumnCount",1,rs.getMetaData().getColumnCount());
        assertEquals("ColumnCount","i",rs.getMetaData().getColumnName(1));
        assertRowCount(1,rs);
```
Location: |project://smallsql0.21_src/src/smallsql/junit/TestStatement.java|(10681,261,<269,8>,<273,29>)
```
 rs = pr.getGeneratedKeys();
        assertNotNull("RETURN_GENERATED_KEYS", rs);
        assertEquals("ColumnCount",1,rs.getMetaData().getColumnCount());
        assertEquals("ColumnCount","i",rs.getMetaData().getColumnName(1));
        assertRowCount(1,rs);
```
Location: |project://smallsql0.21_src/src/smallsql/junit/TestStatement.java|(11407,261,<284,8>,<288,29>)
```
 rs = pr.getGeneratedKeys();
        assertNotNull("RETURN_GENERATED_KEYS", rs);
        assertEquals("ColumnCount",1,rs.getMetaData().getColumnCount());
        assertEquals("ColumnCount","i",rs.getMetaData().getColumnName(1));
        assertRowCount(1,rs);
```
Location: |project://smallsql0.21_src/src/smallsql/junit/TestStatement.java|(12145,261,<299,8>,<303,29>)
```
 rs = pr.getGeneratedKeys();
        assertNotNull("RETURN_GENERATED_KEYS", rs);
        assertEquals("ColumnCount",1,rs.getMetaData().getColumnCount());
        assertEquals("ColumnCount","i",rs.getMetaData().getColumnName(1));
        assertRowCount(1,rs);
```

=-=-=-=-=-= Clone Class =-=-=-=-=-=-=
Location: |project://smallsql0.21_src/src/smallsql/junit/TestStatement.java|(7385,230,<199,8>,<202,74>)
```
 rs = st.getGeneratedKeys();
        assertNotNull("RETURN_GENERATED_KEYS", rs);
        assertEquals("ColumnCount",1,rs.getMetaData().getColumnCount());
        assertEquals("ColumnCount","i",rs.getMetaData().getColumnName(1));
```
Location: |project://smallsql0.21_src/src/smallsql/junit/TestStatement.java|(7881,230,<209,8>,<212,74>)
```
 rs = st.getGeneratedKeys();
        assertNotNull("RETURN_GENERATED_KEYS", rs);
        assertEquals("ColumnCount",1,rs.getMetaData().getColumnCount());
        assertEquals("ColumnCount","i",rs.getMetaData().getColumnName(1));
```
Location: |project://smallsql0.21_src/src/smallsql/junit/TestStatement.java|(8531,230,<222,8>,<225,74>)
```
 rs = st.getGeneratedKeys();
        assertNotNull("RETURN_GENERATED_KEYS", rs);
        assertEquals("ColumnCount",1,rs.getMetaData().getColumnCount());
        assertEquals("ColumnCount","i",rs.getMetaData().getColumnName(1));
```
Location: |project://smallsql0.21_src/src/smallsql/junit/TestStatement.java|(9193,230,<235,8>,<238,74>)
```
 rs = st.getGeneratedKeys();
        assertNotNull("RETURN_GENERATED_KEYS", rs);
        assertEquals("ColumnCount",1,rs.getMetaData().getColumnCount());
        assertEquals("ColumnCount","i",rs.getMetaData().getColumnName(1));
```

=-=-=-=-=-= Clone Class =-=-=-=-=-=-=
Location: |project://smallsql0.21_src/src/smallsql/junit/TestOperatoren.java|(7185,323,<158,8>,<162,49>)
```
 assertTrue( "To few rows", rs.next() );
        assertEqualsObject( "Values not equals", rs.getObject(1), rs.getObject(2), false);
        assertTrue( "To few rows", rs.next() );
        assertEqualsObject( "Values not equals", rs.getObject(1), rs.getObject(2), false);
        assertFalse( "To many rows", rs.next() );
```
Location: |project://smallsql0.21_src/src/smallsql/junit/TestOperatoren.java|(7606,323,<165,8>,<169,49>)
```
 assertTrue( "To few rows", rs.next() );
        assertEqualsObject( "Values not equals", rs.getObject(1), rs.getObject(2), false);
        assertTrue( "To few rows", rs.next() );
        assertEqualsObject( "Values not equals", rs.getObject(1), rs.getObject(2), false);
        assertFalse( "To many rows", rs.next() );
```

=-=-=-=-=-= Clone Class =-=-=-=-=-=-=
Location: |project://smallsql0.21_src/src/smallsql/junit/TestStatement.java|(7881,261,<209,8>,<213,29>)
```
 rs = st.getGeneratedKeys();
        assertNotNull("RETURN_GENERATED_KEYS", rs);
        assertEquals("ColumnCount",1,rs.getMetaData().getColumnCount());
        assertEquals("ColumnCount","i",rs.getMetaData().getColumnName(1));
        assertRowCount(1,rs);
```
Location: |project://smallsql0.21_src/src/smallsql/junit/TestStatement.java|(8531,261,<222,8>,<226,29>)
```
 rs = st.getGeneratedKeys();
        assertNotNull("RETURN_GENERATED_KEYS", rs);
        assertEquals("ColumnCount",1,rs.getMetaData().getColumnCount());
        assertEquals("ColumnCount","i",rs.getMetaData().getColumnName(1));
        assertRowCount(1,rs);
```
Location: |project://smallsql0.21_src/src/smallsql/junit/TestStatement.java|(9193,261,<235,8>,<239,29>)
```
 rs = st.getGeneratedKeys();
        assertNotNull("RETURN_GENERATED_KEYS", rs);
        assertEquals("ColumnCount",1,rs.getMetaData().getColumnCount());
        assertEquals("ColumnCount","i",rs.getMetaData().getColumnName(1));
        assertRowCount(1,rs);
```

=-=-=-=-=-= Clone Class =-=-=-=-=-=-=
Location: |project://smallsql0.21_src/src/smallsql/junit/TestDBMetaData.java|(8720,242,<184,2>,<188,50>)
```
 assertRSMetaData( rs, colNames, colTypes);		
		assertTrue( "No row", rs.next() );
		assertEquals( "a", rs.getObject("COLUMN_NAME") ); 
		assertEquals( "INT", rs.getObject("TYPE_NAME") ); 
		assertEquals( "5", rs.getObject("COLUMN_Def") );
```
Location: |project://smallsql0.21_src/src/smallsql/junit/TestDBMetaData.java|(9122,242,<193,2>,<197,50>)
```
 assertRSMetaData( rs, colNames, colTypes);		
		assertTrue( "No row", rs.next() );
		assertEquals( "a", rs.getObject("COLUMN_NAME") ); 
		assertEquals( "INT", rs.getObject("TYPE_NAME") ); 
		assertEquals( "5", rs.getObject("COLUMN_Def") );
```

=-=-=-=-=-= Clone Class =-=-=-=-=-=-=
Location: |project://smallsql0.21_src/src/smallsql/junit/TestOperatoren.java|(8196,188,<176,8>,<179,49>)
```
 assertTrue( "To few rows", rs.next() );
        assertTrue( "To few rows", rs.next() );
        assertTrue( "To few rows", rs.next() );
        assertFalse( "To many rows", rs.next() );
```
Location: |project://smallsql0.21_src/src/smallsql/junit/TestOperatoren.java|(8526,188,<183,8>,<186,49>)
```
 assertTrue( "To few rows", rs.next() );
        assertTrue( "To few rows", rs.next() );
        assertTrue( "To few rows", rs.next() );
        assertFalse( "To many rows", rs.next() );
```
Location: |project://smallsql0.21_src/src/smallsql/junit/TestOperatoren.java|(9209,188,<198,8>,<201,49>)
```
 assertTrue( "To few rows", rs.next() );
        assertTrue( "To few rows", rs.next() );
        assertTrue( "To few rows", rs.next() );
        assertFalse( "To many rows", rs.next() );
```
Location: |project://smallsql0.21_src/src/smallsql/junit/TestOperatoren.java|(9963,188,<214,8>,<217,49>)
```
 assertTrue( "To few rows", rs.next() );
        assertTrue( "To few rows", rs.next() );
        assertTrue( "To few rows", rs.next() );
        assertFalse( "To many rows", rs.next() );
```
Location: |project://smallsql0.21_src/src/smallsql/junit/TestOperatoren.java|(10778,176,<235,2>,<238,43>)
```
 assertTrue( "To few rows", rs.next() );
        assertTrue( "To few rows", rs.next() );
		assertTrue( "To few rows", rs.next() );
		assertFalse( "To many rows", rs.next() );
```

=-=-=-=-=-= Clone Class =-=-=-=-=-=-=
Location: |project://smallsql0.21_src/src/smallsql/junit/TestStatement.java|(8234,185,<216,8>,<219,29>)
```
 rs = st.getGeneratedKeys();
        assertNotNull("RETURN_GENERATED_KEYS", rs);
        assertEquals("ColumnCount",2,rs.getMetaData().getColumnCount());
        assertRowCount(1,rs);
```
Location: |project://smallsql0.21_src/src/smallsql/junit/TestStatement.java|(8891,185,<229,8>,<232,29>)
```
 rs = st.getGeneratedKeys();
        assertNotNull("RETURN_GENERATED_KEYS", rs);
        assertEquals("ColumnCount",2,rs.getMetaData().getColumnCount());
        assertRowCount(1,rs);
```

=-=-=-=-=-= Clone Class =-=-=-=-=-=-=
Location: |project://smallsql0.21_src/src/smallsql/junit/TestTransactions.java|(15096,389,<410,3>,<417,28>)
```
 con1.createStatement().execute("Create Table transactions (i int identity, v varchar(20))");
			assertRowCount( 0, "Select * from transactions");

			con1.setAutoCommit(false);
			con1.createStatement().execute("Insert Into transactions(v) Values('qwert2')");

			ResultSet rs2 = con2.createStatement().executeQuery("Select count(*) from transactions");
			assertTrue( rs2.next() );
```
Location: |project://smallsql0.21_src/src/smallsql/junit/TestTransactions.java|(15876,389,<432,3>,<439,28>)
```
 con1.createStatement().execute("Create Table transactions (i int identity, v varchar(20))");
			assertRowCount( 0, "Select * from transactions");

			con1.setAutoCommit(false);
			con1.createStatement().execute("Insert Into transactions(v) Values('qwert2')");

			ResultSet rs2 = con2.createStatement().executeQuery("Select count(*) from transactions");
			assertTrue( rs2.next() );
```

=-=-=-=-=-= Clone Class =-=-=-=-=-=-=
Location: |project://smallsql0.21_src/src/smallsql/database/StoreImpl.java|(13100,81,<363,8>,<364,41>)
```
 page[ offset++ ] = (byte)(value >> 8);
        page[ offset++ ] = (byte)(value);
```
Location: |project://smallsql0.21_src/src/smallsql/database/StoreImpl.java|(13521,81,<377,8>,<378,41>)
```
 page[ offset++ ] = (byte)(value >> 8);
        page[ offset++ ] = (byte)(value);
```
Location: |project://smallsql0.21_src/src/smallsql/database/StoreImpl.java|(14266,81,<398,8>,<399,41>)
```
 page[ offset++ ] = (byte)(value >> 8);
        page[ offset++ ] = (byte)(value);
```

=-=-=-=-=-= Clone Class =-=-=-=-=-=-=
Location: |project://smallsql0.21_src/src/smallsql/database/MemoryStream.java|(2035,169,<69,2>,<72,37>)
```
 puffer[ offset++ ] = (byte)(value >> 24);
		puffer[ offset++ ] = (byte)(value >> 16);
		puffer[ offset++ ] = (byte)(value >> 8);
		puffer[ offset++ ] = (byte)(value);
```
Location: |project://smallsql0.21_src/src/smallsql/database/MemoryStream.java|(2453,169,<81,2>,<84,37>)
```
 puffer[ offset++ ] = (byte)(value >> 24);
		puffer[ offset++ ] = (byte)(value >> 16);
		puffer[ offset++ ] = (byte)(value >> 8);
		puffer[ offset++ ] = (byte)(value);
```

=-=-=-=-=-= Clone Class =-=-=-=-=-=-=
Location: |project://smallsql0.21_src/src/smallsql/database/TableResult.java|(5522,114,<180,6>,<180,120>)
```
 store = ((StorePageLink)insertStorePages.get( (int)(filePos & 0x3FFFFFFFFFFFFFFFL) )).getStore( table, con, lock);
```
Location: |project://smallsql0.21_src/src/smallsql/database/TableResult.java|(5845,114,<186,5>,<186,119>)
```
 store = ((StorePageLink)insertStorePages.get( (int)(filePos & 0x3FFFFFFFFFFFFFFFL) )).getStore( table, con, lock);
```

=-=-=-=-=-= Clone Class =-=-=-=-=-=-=
Location: |project://smallsql0.21_src/src/smallsql/junit/BasicTestCase.java|(5362,123,<156,2>,<158,38>)
```
 Connection con = AllTests.getConnection();
		Statement st = con.createStatement();
		ResultSet rs = st.executeQuery(sql);
```
Location: |project://smallsql0.21_src/src/smallsql/junit/BasicTestCase.java|(6835,123,<202,2>,<204,38>)
```
 Connection con = AllTests.getConnection();
		Statement st = con.createStatement();
		ResultSet rs = st.executeQuery(sql);
```
Location: |project://smallsql0.21_src/src/smallsql/junit/BasicTestCase.java|(13880,123,<346,2>,<348,38>)
```
 Connection con = AllTests.getConnection();
		Statement st = con.createStatement();
		ResultSet rs = st.executeQuery(sql);
```

=-=-=-=-=-= Clone Class =-=-=-=-=-=-=
Location: |project://smallsql0.21_src/src/smallsql/database/MutableNumeric.java|(4881,112,<167,2>,<172,3>)
```
 if(num.scale < scale){
			num.setScale(scale);
		}else
		if(num.scale > scale){
			setScale(num.scale);
		}
```
Location: |project://smallsql0.21_src/src/smallsql/database/MutableNumeric.java|(6715,112,<235,2>,<240,3>)
```
 if(num.scale < scale){
			num.setScale(scale);
		}else
		if(num.scale > scale){
			setScale(num.scale);
		}
```

=-=-=-=-=-= Clone Class =-=-=-=-=-=-=
Location: |project://smallsql0.21_src/src/smallsql/database/ExpressionFunctionSubstring.java|(1948,134,<59,2>,<61,84>)
```
 int length = param3.getInt();
		if(length < 0) 
			throw SmallSQLException.create(Language.SUBSTR_INVALID_LEN, new Integer(length));
```
Location: |project://smallsql0.21_src/src/smallsql/database/ExpressionFunctionSubstring.java|(2617,134,<80,2>,<82,84>)
```
 int length = param3.getInt();
		if(length < 0) 
			throw SmallSQLException.create(Language.SUBSTR_INVALID_LEN, new Integer(length));
```

=-=-=-=-=-= Clone Class =-=-=-=-=-=-=
Location: |project://smallsql0.21_src/src/smallsql/database/StoreImpl.java|(13423,179,<375,8>,<378,41>)
```
 page[ offset++ ] = (byte)(value >> 24);
        page[ offset++ ] = (byte)(value >> 16);
        page[ offset++ ] = (byte)(value >> 8);
        page[ offset++ ] = (byte)(value);
```
Location: |project://smallsql0.21_src/src/smallsql/database/StoreImpl.java|(14168,179,<396,8>,<399,41>)
```
 page[ offset++ ] = (byte)(value >> 24);
        page[ offset++ ] = (byte)(value >> 16);
        page[ offset++ ] = (byte)(value >> 8);
        page[ offset++ ] = (byte)(value);
```

=-=-=-=-=-= Clone Class =-=-=-=-=-=-=
Location: |project://smallsql0.21_src/src/smallsql/database/IndexDescription.java|(6136,299,<186,9>,<194,9>)
```
 catch(Throwable e){
            if(raFile != null)
                try{
                    raFile.close();
                }catch(Exception e2){
                    DriverManager.println(e2.toString());
                }
            throw SmallSQLException.createFromException(e);
        }
```
Location: |project://smallsql0.21_src/src/smallsql/database/TableView.java|(3908,209,<105,3>,<113,3>)
```
 catch(Throwable e){
			if(raFile != null)
				try{
					raFile.close();
				}catch(Exception e2){
					DriverManager.println(e2.toString());
				}
			throw SmallSQLException.createFromException(e);
		}
```

=-=-=-=-=-= Clone Class =-=-=-=-=-=-=
Location: |project://smallsql0.21_src/src/smallsql/junit/BenchTest.java|(7028,171,<176,12>,<179,37>)
```
 time += System.currentTimeMillis();
            rs = st.executeQuery( "SELECT count(*) FROM " + tableName);
            rs.next();
            int count = rs.getInt(1);
```
Location: |project://smallsql0.21_src/src/smallsql/junit/BenchTest.java|(11532,171,<281,12>,<284,37>)
```
 time += System.currentTimeMillis();
            rs = st.executeQuery( "SELECT count(*) FROM " + tableName);
            rs.next();
            int count = rs.getInt(1);
```

=-=-=-=-=-= Clone Class =-=-=-=-=-=-=
Location: |project://smallsql0.21_src/src/smallsql/database/Join.java|(1837,128,<52,75>,<57,5>)
```
 {
        this.type = type;
        this.condition = condition;
        this.left = left;
        this.right = right;
    }
```
Location: |project://smallsql0.21_src/src/smallsql/database/JoinScroll.java|(2000,110,<59,8>,<62,27>)
```
 this.type = type;
        this.condition = condition;
        this.left = left;
        this.right = right;
```

=-=-=-=-=-= Clone Class =-=-=-=-=-=-=
Location: |project://smallsql0.21_src/src/smallsql/junit/TestOperatoren.java|(3733,92,<73,8>,<73,100>)
```
 a("timestamp"         , new Timestamp(99, 1,1,0,0,0,0),      new Timestamp(99, 2,2,0,0,0,0))
```
Location: |project://smallsql0.21_src/src/smallsql/junit/TestJoins.java|(3748,92,<75,8>,<75,100>)
```
 a("timestamp"         , new Timestamp(99, 1,1,0,0,0,0),      new Timestamp(99, 2,2,0,0,0,0))
```

=-=-=-=-=-= Clone Class =-=-=-=-=-=-=
Location: |project://smallsql0.21_src/src/smallsql/junit/TestOrderBy.java|(10100,132,<364,2>,<368,40>)
```
 assertTrue( rs.next() );
		
		assertNull(rs.getObject("i"));
		assertTrue( rs.next() );
		oldValue = Math.abs( rs.getInt("i") );
```
Location: |project://smallsql0.21_src/src/smallsql/junit/TestOrderBy.java|(10755,132,<391,2>,<395,40>)
```
 assertTrue( rs.next() );
		
		assertNull(rs.getObject("i"));
		assertTrue( rs.next() );
		oldValue = Math.abs( rs.getInt("i") );
```

=-=-=-=-=-= Clone Class =-=-=-=-=-=-=
Location: |project://smallsql0.21_src/src/smallsql/junit/TestOrderBy.java|(9446,379,<338,2>,<351,36>)
```
 assertTrue( rs.next() );
		
		oldValue = (Integer)rs.getObject("i");
		assertNull(oldValue);
		assertTrue( rs.next() );
		oldValue = (Integer)rs.getObject("i");
		
		int count = 1;
		while(rs.next()){
			assertTrue( oldValue.compareTo( (Integer)rs.getObject("i") ) < 0 );
			oldValue = (Integer)rs.getObject("i");
			count++;
		}
		assertEquals( valueCount, count );
```
Location: |project://smallsql0.21_src/src/smallsql/junit/TestOrderBy.java|(11549,379,<423,2>,<436,36>)
```
 assertTrue( rs.next() );
		
		oldValue = (Integer)rs.getObject("i");
		assertNull(oldValue);
		assertTrue( rs.next() );
		oldValue = (Integer)rs.getObject("i");
		
		int count = 1;
		while(rs.next()){
			assertTrue( oldValue.compareTo( (Integer)rs.getObject("i") ) < 0 );
			oldValue = (Integer)rs.getObject("i");
			count++;
		}
		assertEquals( valueCount, count );
```

=-=-=-=-=-= Clone Class =-=-=-=-=-=-=
Location: |project://smallsql0.21_src/src/smallsql/junit/TestOrderBy.java|(4843,169,<152,2>,<159,16>)
```
 assertTrue( rs.next() );
		
		oldValue = rs.getString("v");
		assertNull(oldValue);
		assertTrue( rs.next() );
		oldValue = rs.getString("v");
		
		int count = 1;
```
Location: |project://smallsql0.21_src/src/smallsql/junit/TestOrderBy.java|(5523,169,<179,2>,<186,16>)
```
 assertTrue( rs.next() );
		
		oldValue = rs.getString("v");
		assertNull(oldValue);
		assertTrue( rs.next() );
		oldValue = rs.getString("v");
		
		int count = 1;
```

=-=-=-=-=-= Clone Class =-=-=-=-=-=-=
Location: |project://smallsql0.21_src/src/smallsql/database/SSCallableStatement.java|(4378,244,<117,51>,<125,5>)
```
 {
        try{
            Expression expr = getValue(i);
            wasNull = expr.isNull();
            return expr.getLong();
        }catch(Exception e){
            throw SmallSQLException.createFromException( e );
        }
    }
```
Location: |project://smallsql0.21_src/src/smallsql/database/SSCallableStatement.java|(4979,244,<135,55>,<143,5>)
```
 {
        try{
            Expression expr = getValue(i);
            wasNull = expr.isNull();
            return expr.getLong();
        }catch(Exception e){
            throw SmallSQLException.createFromException( e );
        }
    }
```

=-=-=-=-=-= Clone Class =-=-=-=-=-=-=
Location: |project://smallsql0.21_src/src/smallsql/junit/BasicTestCase.java|(4599,199,<130,16>,<134,54>)
```
 int k=tmp.length-1;
                for(; k>= 0; k--) if(tmp[k] != 0) break;
                k++;
                byte[] tmp2 = new byte[k];
                System.arraycopy( tmp, 0, tmp2, 0, k);
```
Location: |project://smallsql0.21_src/src/smallsql/junit/BasicTestCase.java|(5050,151,<143,4>,<147,42>)
```
 int k=tmp.length-1;
				for(; k>= 0; k--) if(tmp[k] != 0) break;
				k++;
				byte[] tmp2 = new byte[k];
				System.arraycopy( tmp, 0, tmp2, 0, k);
```

=-=-=-=-=-= Clone Class =-=-=-=-=-=-=
Location: |project://smallsql0.21_src/src/smallsql/database/ExpressionFunctionSubstring.java|(2167,105,<63,30>,<67,3>)
```
 {
			byte[] b = new byte[length];
			System.arraycopy(bytes, start, b, 0, length);
			return b;		
		}
```
Location: |project://smallsql0.21_src/src/smallsql/database/ExpressionFunctionLTrim.java|(1919,90,<61,2>,<63,11>)
```
 byte[] b = new byte[length];
		System.arraycopy(bytes, start, b, 0, length);
		return b;
```

=-=-=-=-=-= Clone Class =-=-=-=-=-=-=
Location: |project://smallsql0.21_src/src/smallsql/junit/TestOperatoren.java|(10261,245,<221,2>,<227,13>)
```
 pr.setObject( 1, testValue.small);
		pr.setObject( 2, testValue.large);
		rs = pr.executeQuery();
		assertTrue( "To few rows", rs.next() );
		assertTrue( "To few rows", rs.next() );
		assertFalse( "To many rows", rs.next() );
		pr.close();
```
Location: |project://smallsql0.21_src/src/smallsql/junit/TestOperatoren.java|(11056,243,<242,2>,<248,13>)
```
 pr.setObject( 1, testValue.small);
		pr.setObject( 2, testValue.large);
		rs = pr.executeQuery();
		assertTrue( "To few rows", rs.next());
		assertTrue( "To few rows", rs.next());
		assertFalse( "To many rows", rs.next() );
		pr.close();
```

=-=-=-=-=-= Clone Class =-=-=-=-=-=-=
Location: |project://smallsql0.21_src/src/smallsql/database/GroupResult.java|(3480,160,<89,7>,<94,3>)
```
 {
			int idx = internalExpressions.indexOf(expr);
			if(idx >= 0) return idx;
			internalExpressions.add(expr);
			return internalExpressions.size()-1;
		}
```
Location: |project://smallsql0.21_src/src/smallsql/database/GroupResult.java|(4267,160,<111,36>,<116,3>)
```
 {
			int idx = internalExpressions.indexOf(expr);
			if(idx >= 0) return idx;
			internalExpressions.add(expr);
			return internalExpressions.size()-1;
		}
```

=-=-=-=-=-= Clone Class =-=-=-=-=-=-=
Location: |project://smallsql0.21_src/src/smallsql/junit/TestOperatoren.java|(9744,422,<209,8>,<218,13>)
```
 pr.setObject( 1, testValue.small);
        pr.setObject( 2, testValue.large);
        rs = pr.executeQuery();
        assertTrue( "To few rows", rs.next() );
        assertTrue( "To few rows", rs.next() );
        assertTrue( "To few rows", rs.next() );
        assertTrue( "To few rows", rs.next() );
        assertTrue( "To few rows", rs.next() );
        assertFalse( "To many rows", rs.next() );
		pr.close();
```
Location: |project://smallsql0.21_src/src/smallsql/junit/TestOperatoren.java|(10589,380,<230,2>,<239,13>)
```
 pr.setObject( 1, testValue.small);
		pr.setObject( 2, testValue.large);
		rs = pr.executeQuery();
		assertTrue( "To few rows", rs.next() );
		assertTrue( "To few rows", rs.next() );
		assertTrue( "To few rows", rs.next() );
        assertTrue( "To few rows", rs.next() );
		assertTrue( "To few rows", rs.next() );
		assertFalse( "To many rows", rs.next() );
		pr.close();
```

=-=-=-=-=-= Clone Class =-=-=-=-=-=-=
Location: |project://smallsql0.21_src/src/smallsql/database/LongTreeList.java|(9409,376,<331,4>,<341,50>)
```
 //there are more entries in this node
				result |= (((long)nextEntry) << shift);
				if(listEnum.stack>=3){
					listEnum.offsetStack[listEnum.stack] = offset;
					return result;
				}
				listEnum.offsetStack[listEnum.stack] = offset+pointerSize;
				offset = getPointer();
				shift -= 16;
				listEnum.stack++;
				listEnum.resultStack[listEnum.stack] = result;
```
Location: |project://smallsql0.21_src/src/smallsql/database/LongTreeList.java|(10726,377,<376,4>,<386,50>)
```
 // there are more entries in this node
				result |= (((long)nextEntry) << shift);
				if(listEnum.stack>=3){
					listEnum.offsetStack[listEnum.stack] = offset;
					return result;
				}
				listEnum.offsetStack[listEnum.stack] = offset+pointerSize;
				offset = getPointer();
				shift -= 16;
				listEnum.stack++;
				listEnum.resultStack[listEnum.stack] = result;
```

=-=-=-=-=-= Clone Class =-=-=-=-=-=-=
Location: |project://smallsql0.21_src/src/smallsql/junit/TestTransactions.java|(9651,272,<274,3>,<280,76>)
```
 assertEqualsRsValue(new Integer(1), "Select count(*) from transactions");

			con.rollback( savepoint );
			
			con.commit();
			assertEqualsRsValue("qwert2", "Select * from transactions");
			assertEqualsRsValue(new Integer(1), "Select count(*) from transactions");
```
Location: |project://smallsql0.21_src/src/smallsql/junit/TestTransactions.java|(12211,303,<325,12>,<331,85>)
```
 assertEqualsRsValue(new Integer(1), "Select count(*) from transactions");

            con.rollback(savepoint);

            con.commit();
            assertEqualsRsValue("qwert2", "Select * from transactions");
            assertEqualsRsValue(new Integer(1), "Select count(*) from transactions");
```

=-=-=-=-=-= Clone Class =-=-=-=-=-=-=
Location: |project://smallsql0.21_src/src/smallsql/junit/TestTransactions.java|(8907,817,<262,3>,<274,76>)
```
 assertEquals( 1, con.createStatement().executeUpdate("Update transactions set v='qwert1'") );
			assertEqualsRsValue("qwert1", "Select * from transactions");
			assertEqualsRsValue(new Integer(1), "Select count(*) from transactions");
			
            assertEquals( 1, con.createStatement().executeUpdate("Update transactions set v='qwert2'") );
            assertEqualsRsValue("qwert2", "Select * from transactions");
            assertEqualsRsValue(new Integer(1), "Select count(*) from transactions");
            
			Savepoint savepoint = con.setSavepoint();
			
			assertEquals( 1, con.createStatement().executeUpdate("Update transactions set v='qwert 3'") );
			assertEqualsRsValue("qwert 3", "Select * from transactions");
			assertEqualsRsValue(new Integer(1), "Select count(*) from transactions");
```
Location: |project://smallsql0.21_src/src/smallsql/junit/TestTransactions.java|(10897,847,<305,12>,<317,85>)
```
 assertEquals(1, con.createStatement().executeUpdate("Update transactions set v='qwert1'"));
            assertEqualsRsValue("qwert1", "Select * from transactions");
            assertEqualsRsValue(new Integer(1), "Select count(*) from transactions");

            assertEquals(1, con.createStatement().executeUpdate("Update transactions set v='qwert2'"));
            assertEqualsRsValue("qwert2", "Select * from transactions");
            assertEqualsRsValue(new Integer(1), "Select count(*) from transactions");

            Savepoint savepoint = con.setSavepoint();

            assertEquals(1, con.createStatement().executeUpdate("Update transactions set v='qwert 3'"));
            assertEqualsRsValue("qwert 3", "Select * from transactions");
            assertEqualsRsValue(new Integer(1), "Select count(*) from transactions");
```

=-=-=-=-=-= Clone Class =-=-=-=-=-=-=
Location: |project://smallsql0.21_src/src/smallsql/database/SQLParser.java|(45022,240,<1239,24>,<1243,25>)
```
 if(token2 != null && token2.value == SQLTokenizer.POINT){
                            expr.setNameAfterTableAlias( nextIdentifier() );
                        }else{
                            previousToken();
                        }
```
Location: |project://smallsql0.21_src/src/smallsql/database/SQLParser.java|(50855,272,<1332,32>,<1336,33>)
```
 if(token2 != null && token2.value == SQLTokenizer.POINT){
                                    expr.setNameAfterTableAlias( nextIdentifier() );
                                }else{
                                    previousToken();
                                }
```

=-=-=-=-=-= Clone Class =-=-=-=-=-=-=
Location: |project://smallsql0.21_src/src/smallsql/junit/BasicTestCase.java|(3529,284,<102,1>,<109,2>)
```
 private static String bytes2hex( byte[] bytes ){
		StringBuffer buf = new StringBuffer(bytes.length << 1);
		for(int i=0; i<bytes.length; i++){
			buf.append( digits[ (bytes[i] >> 4) & 0x0F ] );
			buf.append( digits[ (bytes[i]     ) & 0x0F ] );
		}
		return buf.toString();
	}
```
Location: |project://smallsql0.21_src/src/smallsql/database/Utils.java|(6330,321,<205,4>,<212,5>)
```
 static String bytes2hex( byte[] bytes ){
        StringBuffer buf = new StringBuffer(bytes.length << 1);
        for(int i=0; i<bytes.length; i++){
            buf.append( digits[ (bytes[i] >> 4) & 0x0F ] );
            buf.append( digits[ (bytes[i]     ) & 0x0F ] );
        }
        return buf.toString();
    }
```

=-=-=-=-=-= Clone Class =-=-=-=-=-=-=
Location: |project://smallsql0.21_src/src/smallsql/database/SSPreparedStatement.java|(8376,191,<249,4>,<253,32>)
```
 if(failed == null){
					failed = new BatchUpdateException(ex.getMessage(), ex.getSQLState(), ex.getErrorCode(), result);
					failed.initCause(ex);
				}
				failed.setNextException(ex);
```
Location: |project://smallsql0.21_src/src/smallsql/database/SSStatement.java|(7052,245,<271,16>,<275,44>)
```
 if(failed == null){
                    failed = new BatchUpdateException(ex.getMessage(), ex.getSQLState(), ex.getErrorCode(), result);
                    failed.initCause(ex);
                }
                failed.setNextException(ex);
```

=-=-=-=-=-= Clone Class =-=-=-=-=-=-=
Location: |project://smallsql0.21_src/src/smallsql/junit/BasicTestCase.java|(6282,388,<188,4>,<196,5>)
```
 /**
     * Identical to the Implementation from Utils.string2boolean
     */
    private boolean string2boolean( String val){
        try{
            return Double.parseDouble( val ) != 0;
        }catch(NumberFormatException e){/*ignore it if it not a number*/}
        return "true".equalsIgnoreCase( val ) || "yes".equalsIgnoreCase( val ) || "t".equalsIgnoreCase( val );
    }
```
Location: |project://smallsql0.21_src/src/smallsql/database/Utils.java|(11150,303,<317,4>,<322,5>)
```
 static boolean string2boolean( String val){
        try{
            return Double.parseDouble( val ) != 0;
        }catch(NumberFormatException e){/*ignore it if it not a number*/}
        return "true".equalsIgnoreCase( val ) || "yes".equalsIgnoreCase( val ) || "t".equalsIgnoreCase( val );
    }
```

=-=-=-=-=-= Clone Class =-=-=-=-=-=-=
Location: |project://smallsql0.21_src/src/smallsql/junit/TestScrollable.java|(9939,181,<237,8>,<241,37>)
```
 assertEquals(0, rs.getRow());
        assertFalse(rs.isLast());
        assertFalse(rs.isFirst());
        assertFalse(rs.isBeforeFirst());
        assertTrue(rs.isAfterLast());
```
Location: |project://smallsql0.21_src/src/smallsql/junit/TestScrollable.java|(10545,181,<256,8>,<260,37>)
```
 assertEquals(0, rs.getRow());
        assertFalse(rs.isLast());
        assertFalse(rs.isFirst());
        assertFalse(rs.isBeforeFirst());
        assertTrue(rs.isAfterLast());
```

=-=-=-=-=-= Clone Class =-=-=-=-=-=-=
Location: |project://smallsql0.21_src/src/smallsql/junit/TestScrollable.java|(1577,435,<46,3>,<53,99>)
```
 con.createStatement().execute("Create Table Scrollable (i counter, v varchar(20))");
			assertRowCount( 0, "Select * from Scrollable");

			con.createStatement().execute("Insert Into Scrollable(v) Values('qwert')");
			assertRowCount( 1, "Select * from Scrollable");
			assertRowCount( 0, "Select * from Scrollable Where 1=0");

			Statement st = con.createStatement(ResultSet.TYPE_SCROLL_SENSITIVE, ResultSet.CONCUR_UPDATABLE);
```
Location: |project://smallsql0.21_src/src/smallsql/junit/TestScrollable.java|(3032,444,<79,3>,<86,108>)
```
 con.createStatement().execute("Create Table Scrollable (i counter, v varchar(20))");
			assertRowCount( 0, "Select * from Scrollable");

			con.createStatement().execute("Insert Into Scrollable(v) Values('qwert')");
			assertRowCount( 1, "Select * from Scrollable");
			assertRowCount( 0, "Select * from Scrollable Where 1=0");

            Statement st = con.createStatement(ResultSet.TYPE_SCROLL_SENSITIVE, ResultSet.CONCUR_UPDATABLE);
```
Location: |project://smallsql0.21_src/src/smallsql/junit/TestScrollable.java|(4450,444,<111,3>,<118,108>)
```
 con.createStatement().execute("Create Table Scrollable (i counter, v varchar(20))");
			assertRowCount( 0, "Select * from Scrollable");

			con.createStatement().execute("Insert Into Scrollable(v) Values('qwert')");
			assertRowCount( 1, "Select * from Scrollable");
			assertRowCount( 0, "Select * from Scrollable Where 1=0");

            Statement st = con.createStatement(ResultSet.TYPE_SCROLL_SENSITIVE, ResultSet.CONCUR_UPDATABLE);
```
Location: |project://smallsql0.21_src/src/smallsql/junit/TestScrollable.java|(6059,444,<147,3>,<154,108>)
```
 con.createStatement().execute("Create Table Scrollable (i counter, v varchar(20))");
			assertRowCount( 0, "Select * from Scrollable");

			con.createStatement().execute("Insert Into Scrollable(v) Values('qwert')");
			assertRowCount( 1, "Select * from Scrollable");
			assertRowCount( 0, "Select * from Scrollable Where 1=0");

            Statement st = con.createStatement(ResultSet.TYPE_SCROLL_SENSITIVE, ResultSet.CONCUR_UPDATABLE);
```

=-=-=-=-=-= Clone Class =-=-=-=-=-=-=
Location: |project://smallsql0.21_src/src/smallsql/database/IndexScrollStatus.java|(3897,118,<114,4>,<115,81>)
```
 IndexNode node = status.nodes[idx];
				nodeStack.push( new IndexNodeScrollStatus(node, status.asc, scroll, level) );
```
Location: |project://smallsql0.21_src/src/smallsql/database/IndexScrollStatus.java|(4756,118,<143,4>,<144,81>)
```
 IndexNode node = status.nodes[idx];
				nodeStack.push( new IndexNodeScrollStatus(node, status.asc, scroll, level) );
```

=-=-=-=-=-= Clone Class =-=-=-=-=-=-=
Location: |project://smallsql0.21_src/src/smallsql/database/Utils.java|(4825,120,<154,8>,<157,22>)
```
 for(int i=0; i<length; i++){
            result = (result << 8) | (bytes[i] & 0xFF);
        }
        return result;
```
Location: |project://smallsql0.21_src/src/smallsql/database/Utils.java|(5082,120,<163,8>,<166,22>)
```
 for(int i=0; i<length; i++){
            result = (result << 8) | (bytes[i] & 0xFF);
        }
        return result;
```

=-=-=-=-=-= Clone Class =-=-=-=-=-=-=
Location: |project://smallsql0.21_src/src/smallsql/junit/BenchTest.java|(8233,314,<208,16>,<214,17>)
```
 // There are not the correct count of rows.
                if (count == 0){
                    createTestDataWithClassicInsert( con );
                    rs = st1.executeQuery( "SELECT count(*) FROM " + tableName);
                    rs.next();
                    count = rs.getInt(1);
                }
```
Location: |project://smallsql0.21_src/src/smallsql/junit/BenchTest.java|(13168,314,<322,16>,<328,17>)
```
 // There are not the correct count of rows.
                if (count == 0){
                    createTestDataWithClassicInsert( con );
                    rs = st1.executeQuery( "SELECT count(*) FROM " + tableName);
                    rs.next();
                    count = rs.getInt(1);
                }
```

=-=-=-=-=-= Clone Class =-=-=-=-=-=-=
Location: |project://smallsql0.21_src/src/smallsql/junit/BenchTest.java|(17470,585,<422,13>,<433,37>)
```
 pr.setDouble(  8 , 23.45 );
	            pr.setDouble(  9 , 567.45 );
	            pr.setFloat (  10 , (float)78.89 );
	            pr.setTime  (  11, new Time( System.currentTimeMillis() ) );
	            pr.setShort (  12, (short)23456 );
	            pr.setFloat (  13, (float)34.56 );
	            pr.setString(  14, "sysname (30) NULL" );
	            pr.setString(  15 , "text NULL" );
	            pr.setByte  (  16, (byte)28 );
	            pr.setBytes (  17, byteArray );
	            pr.setString(  18, "varchar (255) NULL" );
	            pr.setInt   (  19 , i );
```
Location: |project://smallsql0.21_src/src/smallsql/junit/BenchTest.java|(22756,629,<530,17>,<541,41>)
```
 pr.setDouble(  8 , 23.45 );
	                pr.setDouble(  9 , 567.45 );
	                pr.setFloat (  10 , (float)78.89 );
	                pr.setTime  (  11, new Time( System.currentTimeMillis() ) );
	                pr.setShort (  12, (short)23456 );
	                pr.setFloat (  13, (float)34.56 );
	                pr.setString(  14, "sysname (30) NULL" );
	                pr.setString(  15 , "text NULL" );
	                pr.setByte  (  16, (byte)28 );
	                pr.setBytes (  17, byteArray );
	                pr.setString(  18, "varchar (255) NULL" );
	                pr.setInt   (  19 , i );
```

=-=-=-=-=-= Clone Class =-=-=-=-=-=-=
Location: |project://smallsql0.21_src/src/smallsql/junit/BenchTest.java|(6657,225,<169,12>,<171,52>)
```
 Statement st = con.createStatement( ResultSet.TYPE_SCROLL_SENSITIVE, ResultSet.CONCUR_UPDATABLE );
            ResultSet rs = st.executeQuery("SELECT * FROM "+tableName);
            long time = -System.currentTimeMillis();
```
Location: |project://smallsql0.21_src/src/smallsql/junit/BenchTest.java|(10123,227,<256,12>,<258,52>)
```
 Statement st = con.createStatement( ResultSet.TYPE_SCROLL_SENSITIVE, ResultSet.CONCUR_UPDATABLE );
            ResultSet rs = st.executeQuery("SELECT * FROM " + tableName);
            long time = -System.currentTimeMillis();
```

=-=-=-=-=-= Clone Class =-=-=-=-=-=-=
Location: |project://smallsql0.21_src/src/smallsql/database/StoreImpl.java|(19400,143,<564,8>,<565,112>)
```
 long lobFilePos = readLong();
        StoreImpl store = table.getLobStore( ((TableStorePage)storePage).con, lobFilePos, SQLTokenizer.SELECT );
```
Location: |project://smallsql0.21_src/src/smallsql/database/StoreImpl.java|(20622,143,<597,8>,<598,112>)
```
 long lobFilePos = readLong();
        StoreImpl store = table.getLobStore( ((TableStorePage)storePage).con, lobFilePos, SQLTokenizer.SELECT );
```

=-=-=-=-=-= Clone Class =-=-=-=-=-=-=
Location: |project://smallsql0.21_src/src/smallsql/database/Index.java|(13388,134,<382,3>,<384,20>)
```
 // the first digit include 0-null; 1-empty; 2 another value
			char digit = (i<0) ? (length == 0 ? (char)1 : 2)
							  : (key[i]);
```
Location: |project://smallsql0.21_src/src/smallsql/database/Index.java|(13999,134,<407,3>,<409,20>)
```
 // the first digit include 0-null; 1-empty; 2 another value
			char digit = (i<0) ? (length == 0 ? (char)1 : 2)
							  : (key[i]);
```

=-=-=-=-=-= Clone Class =-=-=-=-=-=-=
Location: |project://smallsql0.21_src/src/smallsql/junit/TestOrderBy.java|(9233,132,<330,2>,<334,19>)
```
 init();
		Connection con = AllTests.getConnection();
		Statement st = con.createStatement();
		ResultSet rs;
		Integer oldValue;
```
Location: |project://smallsql0.21_src/src/smallsql/junit/TestOrderBy.java|(11332,132,<415,2>,<419,19>)
```
 init();
		Connection con = AllTests.getConnection();
		Statement st = con.createStatement();
		ResultSet rs;
		Integer oldValue;
```
Location: |project://smallsql0.21_src/src/smallsql/junit/TestOrderBy.java|(11996,132,<441,2>,<445,19>)
```
 init();
		Connection con = AllTests.getConnection();
		Statement st = con.createStatement();
		ResultSet rs;
		Integer oldValue;
```

=-=-=-=-=-= Clone Class =-=-=-=-=-=-=
Location: |project://smallsql0.21_src/src/smallsql/junit/TestOrderBy.java|(18497,184,<699,2>,<703,12>)
```
 init();
		Connection con = AllTests.getConnection();
		Statement st = con.createStatement(ResultSet.TYPE_SCROLL_SENSITIVE, ResultSet.CONCUR_UPDATABLE);
		ResultSet rs;
		int count;
```
Location: |project://smallsql0.21_src/src/smallsql/junit/TestOrderBy.java|(19305,184,<730,2>,<734,12>)
```
 init();
		Connection con = AllTests.getConnection();
		Statement st = con.createStatement(ResultSet.TYPE_SCROLL_SENSITIVE, ResultSet.CONCUR_UPDATABLE);
		ResultSet rs;
		int count;
```

=-=-=-=-=-= Clone Class =-=-=-=-=-=-=
Location: |project://smallsql0.21_src/src/smallsql/database/Index.java|(12105,116,<331,3>,<334,43>)
```
 node = node.getChildNode(digit);
			
			if(node == null) return null;
			if(nodeList != null) nodeList.add(node);
```
Location: |project://smallsql0.21_src/src/smallsql/database/Index.java|(13527,113,<385,3>,<388,43>)
```
 node = node.getChildNode(digit);

			if(node == null) return null;
			if(nodeList != null) nodeList.add(node);
```

=-=-=-=-=-= Clone Class =-=-=-=-=-=-=
Location: |project://smallsql0.21_src/src/smallsql/junit/TestOperatoren.java|(11745,251,<267,4>,<273,5>)
```
 private static TestValue a(String dataType, Object small, Object large){
        TestValue value = new TestValue();
        value.dataType  = dataType;
        value.small     = small;
        value.large     = large;
        return value;
    }
```
Location: |project://smallsql0.21_src/src/smallsql/junit/TestJoins.java|(10437,251,<204,4>,<210,5>)
```
 private static TestValue a(String dataType, Object small, Object large){
        TestValue value = new TestValue();
        value.dataType  = dataType;
        value.small     = small;
        value.large     = large;
        return value;
    }
```

=-=-=-=-=-= Clone Class =-=-=-=-=-=-=
Location: |project://smallsql0.21_src/src/smallsql/junit/TestOrderBy.java|(18762,470,<707,2>,<725,36>)
```
 //jetzt irgendwo in die Mitte scrollen
		rs.next();
		rs.next();
		rs.previous(); //dann soll der Zeiger nicht am Ende des bereits gefetchten stehen
		
		rs.last();
		count = 0;
		while(rs.previous()) count++;		
		assertEquals( valueCount, count );

		rs.beforeFirst();
		count = -1;
		while(rs.next()) count++;		
		assertEquals( valueCount, count );

		rs.beforeFirst();
		count = -1;
		while(rs.next()) count++;		
		assertEquals( valueCount, count );
```
Location: |project://smallsql0.21_src/src/smallsql/junit/TestOrderBy.java|(19578,470,<738,2>,<756,36>)
```
 //jetzt irgendwo in die Mitte scrollen
		rs.next();
		rs.next();
		rs.previous(); //dann soll der Zeiger nicht am Ende des bereits gefetchten stehen
		
		rs.last();
		count = 0;
		while(rs.previous()) count++;		
		assertEquals( valueCount, count );

		rs.beforeFirst();
		count = -1;
		while(rs.next()) count++;		
		assertEquals( valueCount, count );

		rs.beforeFirst();
		count = -1;
		while(rs.next()) count++;		
		assertEquals( valueCount, count );
```

=-=-=-=-=-= Clone Class =-=-=-=-=-=-=
Location: |project://smallsql0.21_src/src/smallsql/junit/TestOrderBy.java|(3944,131,<116,2>,<120,18>)
```
 init();
		Connection con = AllTests.getConnection();
		Statement st = con.createStatement();
		ResultSet rs;
		String oldValue;
```
Location: |project://smallsql0.21_src/src/smallsql/junit/TestOrderBy.java|(4631,131,<144,2>,<148,18>)
```
 init();
		Connection con = AllTests.getConnection();
		Statement st = con.createStatement();
		ResultSet rs;
		String oldValue;
```
Location: |project://smallsql0.21_src/src/smallsql/junit/TestOrderBy.java|(5307,131,<171,2>,<175,18>)
```
 init();
		Connection con = AllTests.getConnection();
		Statement st = con.createStatement();
		ResultSet rs;
		String oldValue;
```
Location: |project://smallsql0.21_src/src/smallsql/junit/TestOrderBy.java|(5976,131,<199,2>,<203,18>)
```
 init();
		Connection con = AllTests.getConnection();
		Statement st = con.createStatement();
		ResultSet rs;
		String oldValue;
```
Location: |project://smallsql0.21_src/src/smallsql/junit/TestOrderBy.java|(6655,131,<227,2>,<231,18>)
```
 init();
		Connection con = AllTests.getConnection();
		Statement st = con.createStatement();
		ResultSet rs;
		String oldValue;
```
Location: |project://smallsql0.21_src/src/smallsql/junit/TestOrderBy.java|(7341,131,<255,2>,<259,18>)
```
 init();
		Connection con = AllTests.getConnection();
		Statement st = con.createStatement();
		ResultSet rs;
		String oldValue;
```
Location: |project://smallsql0.21_src/src/smallsql/junit/TestOrderBy.java|(8000,131,<281,2>,<285,18>)
```
 init();
		Connection con = AllTests.getConnection();
		Statement st = con.createStatement();
		ResultSet rs;
		String oldValue;
```
Location: |project://smallsql0.21_src/src/smallsql/junit/TestOrderBy.java|(8580,131,<304,2>,<308,18>)
```
 init();
		Connection con = AllTests.getConnection();
		Statement st = con.createStatement();
		ResultSet rs;
		String oldValue;
```
Location: |project://smallsql0.21_src/src/smallsql/junit/TestOrderBy.java|(20995,131,<789,2>,<793,18>)
```
 init();
		Connection con = AllTests.getConnection();
		Statement st = con.createStatement();
		ResultSet rs;
		String oldValue;
```

=-=-=-=-=-= Clone Class =-=-=-=-=-=-=
Location: |project://smallsql0.21_src/src/smallsql/junit/TestDBMetaData.java|(9682,325,<210,8>,<210,333>)
```
 String[] colNames = {"TYPE_NAME", "DATA_TYPE", "PRECISION", "LITERAL_PREFIX", "LITERAL_SUFFIX", "CREATE_PARAMS", "NULLABLE", "CASE_SENSITIVE", "SEARCHABLE", "UNSIGNED_ATTRIBUTE", "FIXED_PREC_SCALE", "AUTO_INCREMENT", "LOCAL_TYPE_NAME", "MINIMUM_SCALE", "MAXIMUM_SCALE", "SQL_DATA_TYPE", "SQL_DATETIME_SUB", "NUM_PREC_RADIX"};
```
Location: |project://smallsql0.21_src/src/smallsql/database/SSDatabaseMetaData.java|(20549,353,<831,2>,<831,355>)
```
 String[] colNames = {		"TYPE_NAME", 				"DATA_TYPE", 																	"PRECISION", 	"LITERAL_PREFIX", "LITERAL_SUFFIX", 		"CREATE_PARAMS", "NULLABLE", 	 "CASE_SENSITIVE", "SEARCHABLE", "UNSIGNED_ATTRIBUTE", "FIXED_PREC_SCALE", "AUTO_INCREMENT", "LOCAL_TYPE_NAME", "MINIMUM_SCALE", "MAXIMUM_SCALE", "SQL_DATA_TYPE", "SQL_DATETIME_SUB", "NUM_PREC_RADIX"};
```

=-=-=-=-=-= Clone Class =-=-=-=-=-=-=
Location: |project://smallsql0.21_src/src/smallsql/junit/TestStatement.java|(11049,208,<276,8>,<280,29>)
```
 pr.execute();
        rs = pr.getGeneratedKeys();
        assertNotNull("RETURN_GENERATED_KEYS", rs);
        assertEquals("ColumnCount",2,rs.getMetaData().getColumnCount());
        assertRowCount(1,rs);
```
Location: |project://smallsql0.21_src/src/smallsql/junit/TestStatement.java|(11782,208,<291,8>,<295,29>)
```
 pr.execute();
        rs = pr.getGeneratedKeys();
        assertNotNull("RETURN_GENERATED_KEYS", rs);
        assertEquals("ColumnCount",2,rs.getMetaData().getColumnCount());
        assertRowCount(1,rs);
```

=-=-=-=-=-= Clone Class =-=-=-=-=-=-=
Location: |project://smallsql0.21_src/src/smallsql/junit/TestTransactions.java|(8516,381,<255,3>,<260,76>)
```
 con.createStatement().execute("Create Table transactions ( v varchar(20))");
			assertRowCount( 0, "Select * from transactions");

			assertEquals( 1, con.createStatement().executeUpdate("Insert Into transactions(v) Values('qwert')") );
			assertEqualsRsValue("qwert", "Select * from transactions");
			assertEqualsRsValue(new Integer(1), "Select count(*) from transactions");
```
Location: |project://smallsql0.21_src/src/smallsql/junit/TestTransactions.java|(10358,414,<296,12>,<301,85>)
```
 con.createStatement().execute("Create Table transactions ( v varchar(20))");
            assertRowCount(0, "Select * from transactions");

            assertEquals(1, con.createStatement().executeUpdate("Insert Into transactions(v) Values('qwert')"));
            assertEqualsRsValue("qwert", "Select * from transactions");
            assertEqualsRsValue(new Integer(1), "Select count(*) from transactions");
```

=-=-=-=-=-= Clone Class =-=-=-=-=-=-=
Location: |project://smallsql0.21_src/src/smallsql/junit/TestTransactions.java|(3733,462,<113,3>,<121,52>)
```
 con.createStatement().execute("Create Table transactions (i int identity, v varchar(20))");
			assertRowCount( 0, "Select * from transactions");

			con.createStatement().execute("Insert Into transactions(v) Values('qwert')");
			assertRowCount( 1, "Select * from transactions");

			con.setAutoCommit(false);
			con.createStatement().execute("Insert Into transactions(v) Select v From transactions");
			assertRowCount( 2, "Select * from transactions");
```
Location: |project://smallsql0.21_src/src/smallsql/junit/TestTransactions.java|(5779,462,<172,3>,<180,52>)
```
 con.createStatement().execute("Create Table transactions (i int identity, v varchar(20))");
			assertRowCount( 0, "Select * from transactions");

			con.createStatement().execute("Insert Into transactions(v) Values('qwert')");
			assertRowCount( 1, "Select * from transactions");

			con.setAutoCommit(false);
			con.createStatement().execute("Insert Into transactions(v) Select v From transactions");
			assertRowCount( 2, "Select * from transactions");
```

=-=-=-=-=-= Clone Class =-=-=-=-=-=-=
Location: |project://smallsql0.21_src/src/smallsql/database/LongTreeList.java|(9825,179,<344,4>,<348,50>)
```
 //no more entries in this node
				shift += 16;
				listEnum.stack--;
				if(listEnum.stack<0) return -1; // no more entries
				result = listEnum.resultStack[listEnum.stack];
```
Location: |project://smallsql0.21_src/src/smallsql/database/LongTreeList.java|(11152,179,<389,4>,<393,50>)
```
 //no more entries in this node
				shift += 16;
				listEnum.stack--;
				if(listEnum.stack<0) return -1; // no more entries
				result = listEnum.resultStack[listEnum.stack];
```

=-=-=-=-=-= Clone Class =-=-=-=-=-=-=
Location: |project://smallsql0.21_src/src/smallsql/junit/TestExceptions.java|(3818,130,<87,5>,<90,22>)
```
 init();
        Connection con = AllTests.getConnection();
        Statement st = con.createStatement();
		ResultSet rs = null;
```
Location: |project://smallsql0.21_src/src/smallsql/junit/TestOrderBy.java|(17235,118,<650,2>,<653,22>)
```
 init();
		Connection con = AllTests.getConnection();
		Statement st = con.createStatement();
		ResultSet rs = null;
```

=-=-=-=-=-= Clone Class =-=-=-=-=-=-=
Location: |project://smallsql0.21_src/src/smallsql/database/SQLParser.java|(19401,172,<581,8>,<584,48>)
```
 String catalog;
        String tableName = catalog = nextIdentifier();
        tableName = nextIdentiferPart(tableName);
        if(tableName == catalog) catalog = null;
```
Location: |project://smallsql0.21_src/src/smallsql/database/SQLParser.java|(31206,172,<883,8>,<886,48>)
```
 String catalog;
        String tableName = catalog = nextIdentifier();
        tableName = nextIdentiferPart(tableName);
        if(tableName == catalog) catalog = null;
```

=-=-=-=-=-= Clone Class =-=-=-=-=-=-=
Location: |project://smallsql0.21_src/src/smallsql/database/ExpressionFunctionRight.java|(1703,173,<53,2>,<58,30>)
```
 if(isNull()) return null;
		byte[] bytes = param1.getBytes();
		int length = param2.getInt();
		if(bytes.length <= length) return bytes;

		byte[] b = new byte[length];
```
Location: |project://smallsql0.21_src/src/smallsql/database/ExpressionFunctionLeft.java|(1700,173,<53,2>,<58,30>)
```
 if(isNull()) return null;
		byte[] bytes = param1.getBytes();
		int length = param2.getInt();
		if(bytes.length <= length) return bytes;

		byte[] b = new byte[length];
```

=-=-=-=-=-= Clone Class =-=-=-=-=-=-=
Location: |project://smallsql0.21_src/src/smallsql/junit/BasicTestCase.java|(3451,74,<101,29>,<101,103>)
```
 digits = {'0','1','2','3','4','5','6','7','8','9','A','B','C','D','E','F'}
```
Location: |project://smallsql0.21_src/src/smallsql/database/Utils.java|(16305,89,<476,24>,<476,113>)
```
 digits = {'0', '1', '2', '3', '4', '5', '6', '7', '8', '9', 'A', 'B', 'C', 'D', 'E', 'F'}
```

=-=-=-=-=-= Clone Class =-=-=-=-=-=-=
Location: |project://smallsql0.21_src/src/smallsql/database/Table.java|(12418,210,<358,26>,<364,7>)
```
 {
							Iterator values = locks.values().iterator();
							while(values.hasNext()){
								TableStorePage lock = (TableStorePage)values.next();
								if(lock.con != con) return null;
							}
						}
```
Location: |project://smallsql0.21_src/src/smallsql/database/Table.java|(12930,210,<370,41>,<376,7>)
```
 {
							Iterator values = locks.values().iterator();
							while(values.hasNext()){
								TableStorePage lock = (TableStorePage)values.next();
								if(lock.con != con) return null;
							}
						}
```
Location: |project://smallsql0.21_src/src/smallsql/database/Table.java|(13637,315,<388,55>,<394,21>)
```
 {
                        Iterator values = locks.values().iterator();
                        while(values.hasNext()){
                            TableStorePage lock = (TableStorePage)values.next();
                            if(lock.con != con) return null;
                        }
                    }
```

=-=-=-=-=-= Clone Class =-=-=-=-=-=-=
Location: |project://smallsql0.21_src/src/smallsql/junit/TestThreads.java|(2134,171,<79,8>,<82,45>)
```
 ArrayList threadList = new ArrayList();
        throwable = null;
        final Connection con = AllTests.getConnection();
        Statement st = con.createStatement();
```
Location: |project://smallsql0.21_src/src/smallsql/junit/TestThreads.java|(4003,165,<131,8>,<134,45>)
```
 ArrayList threadList = new ArrayList();
        throwable = null;
        Connection con = AllTests.getConnection();
        Statement st = con.createStatement();
```

=-=-=-=-=-= Clone Class =-=-=-=-=-=-=
Location: |project://smallsql0.21_src/src/smallsql/junit/TestScrollable.java|(10314,181,<249,8>,<253,38>)
```
 assertEquals(0, rs.getRow());
        assertFalse(rs.isLast());
        assertFalse(rs.isFirst());
        assertTrue(rs.isBeforeFirst());
        assertFalse(rs.isAfterLast());
```
Location: |project://smallsql0.21_src/src/smallsql/junit/TestScrollable.java|(10777,181,<263,8>,<267,38>)
```
 assertEquals(0, rs.getRow());
        assertFalse(rs.isLast());
        assertFalse(rs.isFirst());
        assertTrue(rs.isBeforeFirst());
        assertFalse(rs.isAfterLast());
```

=-=-=-=-=-= Clone Class =-=-=-=-=-=-=
Location: |project://smallsql0.21_src/src/smallsql/junit/TestThreads.java|(1525,308,<59,8>,<68,9>)
```
 // wait until all threads are finish
        for(int i = 0; i < threadList.size(); i++){
            Thread thread = (Thread)threadList.get(i);
            thread.join(5000);
        }

        // throw the exception if one occur
        if(throwable != null){
            throw throwable;
        }
```
Location: |project://smallsql0.21_src/src/smallsql/junit/TestThreads.java|(3208,340,<106,12>,<115,13>)
```
 // wait until all threads are finish
            for(int i = 0; i < threadList.size(); i++){
                Thread thread = (Thread)threadList.get(i);
                thread.join(5000);
            }

            // throw the exception if one occur
            if(throwable != null){
                throw throwable;
            }
```
Location: |project://smallsql0.21_src/src/smallsql/junit/TestThreads.java|(5191,340,<160,12>,<169,13>)
```
 // wait until all threads are finish
            for(int i = 0; i < threadList.size(); i++){
                Thread thread = (Thread)threadList.get(i);
                thread.join(5000);
            }

            // throw the exception if one occur
            if(throwable != null){
                throw throwable;
            }
```

=-=-=-=-=-= Clone Class =-=-=-=-=-=-=
Location: |project://smallsql0.21_src/src/smallsql/junit/TestScrollable.java|(9538,151,<225,8>,<228,34>)
```
 assertEquals("qwert3", rs.getString("v"));
        assertEquals(3, rs.getRow());
        assertTrue(rs.isLast());
        assertFalse(rs.isFirst());
```
Location: |project://smallsql0.21_src/src/smallsql/junit/TestScrollable.java|(9738,151,<231,8>,<234,34>)
```
 assertEquals("qwert3", rs.getString("v"));
        assertEquals(3, rs.getRow());
        assertTrue(rs.isLast());
        assertFalse(rs.isFirst());
```

=-=-=-=-=-= Clone Class =-=-=-=-=-=-=
Location: |project://smallsql0.21_src/src/smallsql/database/Database.java|(16080,183,<448,6>,<451,52>)
```
 String tableName = tables.get(t);
    		TableView tab = getTableView( con, tableName);
			if(!(tab instanceof Table)) continue;
			IndexDescriptions indexes = ((Table)tab).indexes;
```
Location: |project://smallsql0.21_src/src/smallsql/database/Database.java|(17481,183,<484,6>,<487,52>)
```
 String tableName = tables.get(t);
    		TableView tab = getTableView( con, tableName);
			if(!(tab instanceof Table)) continue;
			IndexDescriptions indexes = ((Table)tab).indexes;
```
Location: |project://smallsql0.21_src/src/smallsql/database/Database.java|(18590,183,<516,6>,<519,52>)
```
 String tableName = tables.get(t);
    		TableView tab = getTableView( con, tableName);
			if(!(tab instanceof Table)) continue;
			IndexDescriptions indexes = ((Table)tab).indexes;
```

=-=-=-=-=-= Clone Class =-=-=-=-=-=-=
Location: |project://smallsql0.21_src/src/smallsql/database/ExpressionFunctionConvert.java|(4154,146,<142,29>,<146,5>)
```
 {
					byte[] buffer = new byte[length];
					System.arraycopy(bytes, 0, buffer, 0, Math.min(bytes.length,length) );
					return buffer;
				}
```
Location: |project://smallsql0.21_src/src/smallsql/database/ExpressionFunctionConvert.java|(4476,146,<153,30>,<157,5>)
```
 {
					byte[] buffer = new byte[length];
					System.arraycopy(bytes, 0, buffer, 0, Math.min(bytes.length,length) );
					return buffer;
				}
```

=-=-=-=-=-= Clone Class =-=-=-=-=-=-=
Location: |project://smallsql0.21_src/src/smallsql/junit/TestOperatoren.java|(5149,301,<95,4>,<104,5>)
```
 public void tearDown(){
        try{
            Connection con = AllTests.getConnection();
            Statement st = con.createStatement();
            st.execute("drop table " + table);
            st.close();
        }catch(Throwable e){
            //e.printStackTrace();
        }
    }
```
Location: |project://smallsql0.21_src/src/smallsql/junit/TestDataTypes.java|(3053,301,<68,4>,<77,5>)
```
 public void tearDown(){
        try{
            Connection con = AllTests.getConnection();
            Statement st = con.createStatement();
            st.execute("drop table " + table);
            st.close();
        }catch(Throwable e){
            //e.printStackTrace();
        }
    }
```
Location: |project://smallsql0.21_src/src/smallsql/junit/TestFunctions.java|(22524,301,<374,4>,<383,5>)
```
 public void tearDown(){
        try{
            Connection con = AllTests.getConnection();
            Statement st = con.createStatement();
            st.execute("drop table " + table);
            st.close();
        }catch(Throwable e){
            //e.printStackTrace();
        }
    }
```
Location: |project://smallsql0.21_src/src/smallsql/junit/TestMoneyRounding.java|(1787,301,<53,4>,<62,5>)
```
 public void tearDown(){
        try{
            Connection con = AllTests.getConnection();
            Statement st = con.createStatement();
            st.execute("drop table " + table);
            st.close();
        }catch(Throwable e){
            //e.printStackTrace();
        }
    }
```

=-=-=-=-=-= Clone Class =-=-=-=-=-=-=
Location: |project://smallsql0.21_src/src/smallsql/junit/BenchTest.java|(18073,236,<434,16>,<438,17>)
```
 int updateCount = pr.executeUpdate();
                if (updateCount != 1){
                    System.out.println( "  Failed: Update count should be 1 but it is " + updateCount + ".");
                    return;
                }
```
Location: |project://smallsql0.21_src/src/smallsql/junit/BenchTest.java|(20835,236,<487,16>,<491,17>)
```
 int updateCount = pr.executeUpdate();
                if (updateCount != 1){
                    System.out.println( "  Failed: Update count should be 1 but it is " + updateCount + ".");
                    return;
                }
```

=-=-=-=-=-= Clone Class =-=-=-=-=-=-=
Location: |project://smallsql0.21_src/src/smallsql/database/IndexScrollStatus.java|(3062,385,<89,5>,<99,6>)
```
 if(status.nodeValue != null){
						if(status.nodeValue instanceof IndexNode){
							level++;
							nodeStack.push(
								new IndexNodeScrollStatus( 	(IndexNode)status.nodeValue, 
														(expressions.get(level).getAlias() != SQLTokenizer.DESC_STR), 
														scroll, level));
							continue;
						}else
							return getReturnValue(status.nodeValue);
					}
```
Location: |project://smallsql0.21_src/src/smallsql/database/IndexScrollStatus.java|(4100,428,<120,5>,<131,41>)
```
 if(status.nodeValue != null){
						if(status.nodeValue instanceof IndexNode){
							level++;
							nodeStack.push(
								new IndexNodeScrollStatus( 	(IndexNode)status.nodeValue, 
														(expressions.get(level).getAlias() != SQLTokenizer.DESC_STR), 
														scroll, level));
							continue;
						}else
							return getReturnValue(status.nodeValue);
					}
					//There is no RowOffset in this node
```

=-=-=-=-=-= Clone Class =-=-=-=-=-=-=
Location: |project://smallsql0.21_src/src/smallsql/junit/BenchTest.java|(26188,386,<618,12>,<625,52>)
```
 java.io.FileOutputStream fos = new java.io.FileOutputStream(tableName+".bin");
            byte bytes[] = new byte[1024];
            for(int i=0; i<rowCount; i++){
                fos.write(bytes);
            }
            fos.close();
            java.io.FileInputStream fis = new java.io.FileInputStream(tableName+".bin");
            long time = -System.currentTimeMillis();
```
Location: |project://smallsql0.21_src/src/smallsql/junit/BenchTest.java|(27620,386,<655,12>,<662,52>)
```
 java.io.FileOutputStream fos = new java.io.FileOutputStream(tableName+".bin");
            byte bytes[] = new byte[1024];
            for(int i=0; i<rowCount; i++){
                fos.write(bytes);
            }
            fos.close();
            java.io.FileInputStream fis = new java.io.FileInputStream(tableName+".bin");
            long time = -System.currentTimeMillis();
```

=-=-=-=-=-= Clone Class =-=-=-=-=-=-=
Location: |project://smallsql0.21_src/src/smallsql/junit/BenchTest.java|(17112,904,<415,13>,<432,55>)
```
 pr.setBytes (  1, byteArray );
	            pr.setString(  2 , "Test" );
	            pr.setDate  (  3 , new Date( System.currentTimeMillis() ) );
	            pr.setFloat (  4, (float)1234.56789 );
	            pr.setFloat (  5 , (float)9876.54321 );
	            pr.setBytes (  6, largeByteArray );
	            pr.setInt   (  7 , i );
	            pr.setDouble(  8 , 23.45 );
	            pr.setDouble(  9 , 567.45 );
	            pr.setFloat (  10 , (float)78.89 );
	            pr.setTime  (  11, new Time( System.currentTimeMillis() ) );
	            pr.setShort (  12, (short)23456 );
	            pr.setFloat (  13, (float)34.56 );
	            pr.setString(  14, "sysname (30) NULL" );
	            pr.setString(  15 , "text NULL" );
	            pr.setByte  (  16, (byte)28 );
	            pr.setBytes (  17, byteArray );
	            pr.setString(  18, "varchar (255) NULL" );
```
Location: |project://smallsql0.21_src/src/smallsql/junit/BenchTest.java|(19913,904,<469,13>,<486,55>)
```
 pr.setBytes (  1, byteArray );
	            pr.setString(  2 , "Test" );
	            pr.setDate  (  3 , new Date( System.currentTimeMillis() ) );
	            pr.setFloat (  4, (float)1234.56789 );
	            pr.setFloat (  5 , (float)9876.54321 );
	            pr.setBytes (  6, largeByteArray );
	            pr.setInt   (  7 , i );
	            pr.setDouble(  8 , 23.45 );
	            pr.setDouble(  9 , 567.45 );
	            pr.setFloat (  10 , (float)78.89 );
	            pr.setTime  (  11, new Time( System.currentTimeMillis() ) );
	            pr.setShort (  12, (short)23456 );
	            pr.setFloat (  13, (float)34.56 );
	            pr.setString(  14, "sysname (30) NULL" );
	            pr.setString(  15 , "text NULL" );
	            pr.setByte  (  16, (byte)28 );
	            pr.setBytes (  17, byteArray );
	            pr.setString(  18, "varchar (255) NULL" );
```

=-=-=-=-=-= Clone Class =-=-=-=-=-=-=
Location: |project://smallsql0.21_src/src/smallsql/database/Utils.java|(6881,113,<218,27>,<219,66>)
```
 (byte)((hexDigit2int( hex[ offset++ ] ) << 4)
                                | hexDigit2int( hex[ offset++ ] ))
```
Location: |project://smallsql0.21_src/src/smallsql/database/Utils.java|(8472,113,<262,23>,<263,66>)
```
 (byte)((hexDigit2int( hex[ offset++ ] ) << 4)
                                | hexDigit2int( hex[ offset++ ] ))
```

=-=-=-=-=-= Clone Class =-=-=-=-=-=-=
Location: |project://smallsql0.21_src/src/smallsql/database/IndexDescription.java|(5498,269,<173,12>,<178,42>)
```
 raFile = Utils.openRaFile( file, database.isReadOnly() );
            ByteBuffer buffer = ByteBuffer.allocate(8);
            raFile.read(buffer);
            buffer.position(0);
            int magic   = buffer.getInt();
            int version = buffer.getInt();
```
Location: |project://smallsql0.21_src/src/smallsql/database/TableView.java|(3030,224,<85,3>,<90,33>)
```
 raFile = Utils.openRaFile( file, database.isReadOnly() );
			ByteBuffer buffer = ByteBuffer.allocate(8);
			raFile.read(buffer);
			buffer.position(0);
			int magic   = buffer.getInt();
			int version = buffer.getInt();
```

=-=-=-=-=-= Clone Class =-=-=-=-=-=-=
Location: |project://smallsql0.21_src/src/smallsql/junit/BenchTest.java|(7993,185,<203,12>,<206,37>)
```
 Statement st1 = con.createStatement();
            ResultSet rs = st1.executeQuery( "SELECT count(*) FROM " + tableName);
            rs.next();
            int count = rs.getInt(1);
```
Location: |project://smallsql0.21_src/src/smallsql/junit/BenchTest.java|(12928,185,<317,12>,<320,37>)
```
 Statement st1 = con.createStatement();
            ResultSet rs = st1.executeQuery( "SELECT count(*) FROM " + tableName);
            rs.next();
            int count = rs.getInt(1);
```

=-=-=-=-=-= Clone Class =-=-=-=-=-=-=
Location: |project://smallsql0.21_src/src/smallsql/database/MemoryStream.java|(1889,79,<63,2>,<64,37>)
```
 puffer[ offset++ ] = (byte)(value >> 8);
		puffer[ offset++ ] = (byte)(value);
```
Location: |project://smallsql0.21_src/src/smallsql/database/MemoryStream.java|(2125,79,<71,2>,<72,37>)
```
 puffer[ offset++ ] = (byte)(value >> 8);
		puffer[ offset++ ] = (byte)(value);
```
Location: |project://smallsql0.21_src/src/smallsql/database/MemoryStream.java|(2543,79,<83,2>,<84,37>)
```
 puffer[ offset++ ] = (byte)(value >> 8);
		puffer[ offset++ ] = (byte)(value);
```

=-=-=-=-=-= Clone Class =-=-=-=-=-=-=
Location: |project://smallsql0.21_src/src/smallsql/junit/TestResultSet.java|(2641,270,<78,8>,<83,45>)
```
 rs.beforeFirst();
        assertTrue("isBeforeFirst", rs.isBeforeFirst() );
        assertFalse("isAfterLast", rs.isAfterLast() );
        assertEquals("getRow", 0, rs.getRow() );
        assertTrue("next", rs.next() );
        assertTrue("isFirst", rs.isFirst() );
```
Location: |project://smallsql0.21_src/src/smallsql/junit/TestResultSet.java|(4557,270,<121,8>,<126,45>)
```
 rs.beforeFirst();
        assertTrue("isBeforeFirst", rs.isBeforeFirst() );
        assertFalse("isAfterLast", rs.isAfterLast() );
        assertEquals("getRow", 0, rs.getRow() );
        assertTrue("next", rs.next() );
        assertTrue("isFirst", rs.isFirst() );
```

=-=-=-=-=-= Clone Class =-=-=-=-=-=-=
Location: |project://smallsql0.21_src/src/smallsql/junit/TestResultSet.java|(7986,244,<203,8>,<208,60>)
```
 assertNotSame("getObject", value, rs.getObject("c"));
        
        //method next
        assertTrue("start", rs.first());
        rs.updateObject("c", value, Types.VARCHAR );
        assertEquals("getObject", value, rs.getObject("c"));
```
Location: |project://smallsql0.21_src/src/smallsql/junit/TestResultSet.java|(8570,244,<217,8>,<222,60>)
```
 assertNotSame("getObject", value, rs.getObject("c"));
        
        //method last
        assertTrue("start", rs.first());
        rs.updateObject("c", value, Types.VARCHAR );
        assertEquals("getObject", value, rs.getObject("c"));
```
Location: |project://smallsql0.21_src/src/smallsql/junit/TestResultSet.java|(8864,247,<224,8>,<229,60>)
```
 assertNotSame("getObject", value, rs.getObject("c"));
        
        //method refresh
        assertTrue("start", rs.first());
        rs.updateObject("c", value, Types.VARCHAR );
        assertEquals("getObject", value, rs.getObject("c"));
```

=-=-=-=-=-= Clone Class =-=-=-=-=-=-=
Location: |project://smallsql0.21_src/src/smallsql/database/Index.java|(3757,189,<101,12>,<106,50>)
```
 if(page == null)
                return null;
            if(i + 1 == count)
                return page.getValue();
            else
                page = (IndexNode)page.getValue();
```
Location: |project://smallsql0.21_src/src/smallsql/database/Index.java|(4784,189,<128,12>,<133,50>)
```
 if(page == null)
                return null;
            if(i + 1 == count)
                return page.getValue();
            else
                page = (IndexNode)page.getValue();
```

=-=-=-=-=-= Clone Class =-=-=-=-=-=-=
Location: |project://smallsql0.21_src/src/smallsql/junit/TestOrderBy.java|(6193,386,<207,2>,<222,36>)
```
 assertTrue( rs.next() );
		oldValue = rs.getString("v");
		
		int count = 1;
		while(oldValue != null && rs.next()){
			String newValue = rs.getString("v");
			if(newValue != null){
				assertTrue( oldValue.compareTo( newValue ) > 0 );
				count++;
			}
			oldValue = newValue;
		}
		assertNull(oldValue);
		assertFalse( rs.next() );

		assertEquals( valueCount, count );
```
Location: |project://smallsql0.21_src/src/smallsql/junit/TestOrderBy.java|(6879,386,<235,2>,<250,36>)
```
 assertTrue( rs.next() );
		oldValue = rs.getString("v");
		
		int count = 1;
		while(oldValue != null && rs.next()){
			String newValue = rs.getString("v");
			if(newValue != null){
				assertTrue( oldValue.compareTo( newValue ) > 0 );
				count++;
			}
			oldValue = newValue;
		}
		assertNull(oldValue);
		assertFalse( rs.next() );

		assertEquals( valueCount, count );
```

=-=-=-=-=-= Clone Class =-=-=-=-=-=-=
Location: |project://smallsql0.21_src/src/smallsql/junit/TestOperatoren.java|(3939,92,<75,8>,<75,100>)
```
 a("smalldatetime"     , new Timestamp(99, 1,1,0,0,0,0),      new Timestamp(99, 2,2,0,0,0,0))
```
Location: |project://smallsql0.21_src/src/smallsql/junit/TestJoins.java|(3954,92,<77,8>,<77,100>)
```
 a("smalldatetime"     , new Timestamp(99, 1,1,0,0,0,0),      new Timestamp(99, 2,2,0,0,0,0))
```

=-=-=-=-=-= Clone Class =-=-=-=-=-=-=
Location: |project://smallsql0.21_src/src/smallsql/junit/TestOperatoren.java|(6860,239,<150,8>,<155,49>)
```
 Connection con = AllTests.getConnection();
        Statement st = con.createStatement();
        ResultSet rs;

        rs = st.executeQuery("Select * from " + table + " where 1 = 0");
        assertFalse( "To many rows", rs.next() );
```
Location: |project://smallsql0.21_src/src/smallsql/junit/TestJoins.java|(7178,239,<159,8>,<164,49>)
```
 Connection con = AllTests.getConnection();
        Statement st = con.createStatement();
        ResultSet rs;

        rs = st.executeQuery("Select * from " + table + " where 1 = 0");
        assertFalse( "To many rows", rs.next() );
```

=-=-=-=-=-= Clone Class =-=-=-=-=-=-=
Location: |project://smallsql0.21_src/src/smallsql/junit/TestOrderBy.java|(5696,155,<187,2>,<192,3>)
```
 while(rs.next()){
			String newValue = rs.getString("v");
			assertTrue( oldValue.compareTo( newValue ) < 0 );
			oldValue = newValue;
			count++;
		}
```
Location: |project://smallsql0.21_src/src/smallsql/junit/TestOrderBy.java|(21626,155,<811,2>,<816,3>)
```
 while(rs.next()){
			String newValue = rs.getString("v");
			assertTrue( oldValue.compareTo( newValue ) < 0 );
			oldValue = newValue;
			count++;
		}
```

=-=-=-=-=-= Clone Class =-=-=-=-=-=-=
Location: |project://smallsql0.21_src/src/smallsql/database/ExpressionFunctionTimestampDiff.java|(3598,140,<109,4>,<110,71>)
```
 DateTime.Details details2 = new DateTime.Details(param2.getLong());
				DateTime.Details details1 = new DateTime.Details(param1.getLong());
```
Location: |project://smallsql0.21_src/src/smallsql/database/ExpressionFunctionTimestampDiff.java|(3881,140,<114,4>,<115,71>)
```
 DateTime.Details details2 = new DateTime.Details(param2.getLong());
				DateTime.Details details1 = new DateTime.Details(param1.getLong());
```
Location: |project://smallsql0.21_src/src/smallsql/database/ExpressionFunctionTimestampDiff.java|(4167,140,<119,4>,<120,71>)
```
 DateTime.Details details2 = new DateTime.Details(param2.getLong());
				DateTime.Details details1 = new DateTime.Details(param1.getLong());
```

=-=-=-=-=-= Clone Class =-=-=-=-=-=-=
Location: |project://smallsql0.21_src/src/smallsql/junit/BasicTestCase.java|(12642,148,<315,4>,<316,60>)
```
 String message = "Check DisplaySize: " + expectedLen + "!=" + Integer.MAX_VALUE + ")";
				assertTrue( message, expectedLen == Integer.MAX_VALUE );
```
Location: |project://smallsql0.21_src/src/smallsql/junit/BasicTestCase.java|(12990,148,<323,4>,<324,60>)
```
 String message = "Check DisplaySize: " + expectedLen + "!=" + Integer.MAX_VALUE + ")";
				assertTrue( message, expectedLen == Integer.MAX_VALUE );
```

=-=-=-=-=-= Clone Class =-=-=-=-=-=-=
Location: |project://smallsql0.21_src/src/smallsql/junit/TestAlterTable.java|(2698,180,<73,8>,<76,33>)
```
 Connection con = AllTests.getConnection();
        Statement st = con.createStatement();
        int isolation = con.getTransactionIsolation();
        con.setAutoCommit(false);
```
Location: |project://smallsql0.21_src/src/smallsql/junit/TestAlterTable.java|(3602,180,<96,8>,<99,33>)
```
 Connection con = AllTests.getConnection();
        Statement st = con.createStatement();
        int isolation = con.getTransactionIsolation();
        con.setAutoCommit(false);
```

=-=-=-=-=-= Clone Class =-=-=-=-=-=-=
Location: |project://smallsql0.21_src/src/smallsql/database/IndexNode.java|(10409,110,<349,2>,<351,36>)
```
 int mid = start + (end - start)/2;
		char nodeDigit = nodes[mid].digit;
		if(nodeDigit == digit) return mid;
```
Location: |project://smallsql0.21_src/src/smallsql/database/IndexNode.java|(10916,110,<368,2>,<370,36>)
```
 int mid = start + (end - start)/2;
		char nodeDigit = nodes[mid].digit;
		if(nodeDigit == digit) return mid;
```

=-=-=-=-=-= Clone Class =-=-=-=-=-=-=
Location: |project://smallsql0.21_src/src/smallsql/junit/TestTransactions.java|(2798,336,<84,3>,<90,52>)
```
 assertRowCount( 0, "Select * from transactions");

			con.createStatement().execute("Insert Into transactions(v) Values('qwert')");
			assertRowCount( 1, "Select * from transactions");

			con.createStatement().execute("Insert Into transactions(v) Select v From transactions");
			assertRowCount( 2, "Select * from transactions");
```
Location: |project://smallsql0.21_src/src/smallsql/junit/TestTransactions.java|(4837,336,<143,3>,<149,52>)
```
 assertRowCount( 0, "Select * from transactions");

			con.createStatement().execute("Insert Into transactions(v) Values('qwert')");
			assertRowCount( 1, "Select * from transactions");

			con.createStatement().execute("Insert Into transactions(v) Select v From transactions");
			assertRowCount( 2, "Select * from transactions");
```

=-=-=-=-=-= Clone Class =-=-=-=-=-=-=
Location: |project://smallsql0.21_src/src/smallsql/junit/TestStatement.java|(10636,306,<268,8>,<273,29>)
```
 assertEquals(1,pr.executeUpdate());
        rs = pr.getGeneratedKeys();
        assertNotNull("RETURN_GENERATED_KEYS", rs);
        assertEquals("ColumnCount",1,rs.getMetaData().getColumnCount());
        assertEquals("ColumnCount","i",rs.getMetaData().getColumnName(1));
        assertRowCount(1,rs);
```
Location: |project://smallsql0.21_src/src/smallsql/junit/TestStatement.java|(11362,306,<283,8>,<288,29>)
```
 assertEquals(1,pr.executeUpdate());
        rs = pr.getGeneratedKeys();
        assertNotNull("RETURN_GENERATED_KEYS", rs);
        assertEquals("ColumnCount",1,rs.getMetaData().getColumnCount());
        assertEquals("ColumnCount","i",rs.getMetaData().getColumnName(1));
        assertRowCount(1,rs);
```
Location: |project://smallsql0.21_src/src/smallsql/junit/TestStatement.java|(12100,306,<298,8>,<303,29>)
```
 assertEquals(1,pr.executeUpdate());
        rs = pr.getGeneratedKeys();
        assertNotNull("RETURN_GENERATED_KEYS", rs);
        assertEquals("ColumnCount",1,rs.getMetaData().getColumnCount());
        assertEquals("ColumnCount","i",rs.getMetaData().getColumnName(1));
        assertRowCount(1,rs);
```

=-=-=-=-=-= Clone Class =-=-=-=-=-=-=
Location: |project://smallsql0.21_src/src/smallsql/junit/TestTransactions.java|(6757,395,<199,3>,<205,62>)
```
 con.createStatement().execute("Create Table transactions (i int identity, v varchar(20))");
			assertRowCount( 0, "Select * from transactions");

			con.createStatement().execute("Insert Into transactions(v) Values('qwert')");

			ResultSet rs = con.createStatement(ResultSet.TYPE_SCROLL_SENSITIVE, ResultSet.CONCUR_UPDATABLE)
								.executeQuery("Select * from transactions Where 1=0");
```
Location: |project://smallsql0.21_src/src/smallsql/junit/TestTransactions.java|(13058,395,<349,3>,<355,62>)
```
 con.createStatement().execute("Create Table transactions (i int identity, v varchar(20))");
			assertRowCount( 0, "Select * from transactions");

			con.createStatement().execute("Insert Into transactions(v) Values('qwert')");

			ResultSet rs = con.createStatement(ResultSet.TYPE_SCROLL_SENSITIVE, ResultSet.CONCUR_UPDATABLE)
								.executeQuery("Select * from transactions Where 1=0");
```

=-=-=-=-=-= Clone Class =-=-=-=-=-=-=
Location: |project://smallsql0.21_src/src/smallsql/junit/TestTransactions.java|(5031,318,<148,3>,<154,18>)
```
 con.createStatement().execute("Insert Into transactions(v) Select v From transactions");
			assertRowCount( 2, "Select * from transactions");

			con.createStatement().execute("Insert Into transactions(v) (Select v From transactions)");
			assertRowCount( 4, "Select * from transactions");
			
			con.rollback();
```
Location: |project://smallsql0.21_src/src/smallsql/junit/TestTransactions.java|(6099,318,<179,3>,<185,18>)
```
 con.createStatement().execute("Insert Into transactions(v) Select v From transactions");
			assertRowCount( 2, "Select * from transactions");

			con.createStatement().execute("Insert Into transactions(v) (Select v From transactions)");
			assertRowCount( 4, "Select * from transactions");
			
			con.rollback();
```

=-=-=-=-=-= Clone Class =-=-=-=-=-=-=
Location: |project://smallsql0.21_src/src/smallsql/junit/TestOperatoren.java|(8477,237,<182,8>,<186,49>)
```
 assertTrue( "To few rows", rs.next() );
        assertTrue( "To few rows", rs.next() );
        assertTrue( "To few rows", rs.next() );
        assertTrue( "To few rows", rs.next() );
        assertFalse( "To many rows", rs.next() );
```
Location: |project://smallsql0.21_src/src/smallsql/junit/TestOperatoren.java|(9914,237,<213,8>,<217,49>)
```
 assertTrue( "To few rows", rs.next() );
        assertTrue( "To few rows", rs.next() );
        assertTrue( "To few rows", rs.next() );
        assertTrue( "To few rows", rs.next() );
        assertFalse( "To many rows", rs.next() );
```
Location: |project://smallsql0.21_src/src/smallsql/junit/TestOperatoren.java|(10735,219,<234,2>,<238,43>)
```
 assertTrue( "To few rows", rs.next() );
		assertTrue( "To few rows", rs.next() );
        assertTrue( "To few rows", rs.next() );
		assertTrue( "To few rows", rs.next() );
		assertFalse( "To many rows", rs.next() );
```

=-=-=-=-=-= Clone Class =-=-=-=-=-=-=
Location: |project://smallsql0.21_src/src/smallsql/database/SQLParser.java|(12014,232,<352,5>,<357,6>)
```
 try{
						int maxRows = Integer.parseInt(token.getName(sql));
						selCmd.setMaxRows(maxRows);
					}catch(NumberFormatException e){
						throw createSyntaxError(token, Language.STXADD_NOT_NUMBER, token.getName(sql));
					}
```
Location: |project://smallsql0.21_src/src/smallsql/database/SQLParser.java|(74449,256,<1932,8>,<1937,9>)
```
 try{
            int maxRows = Integer.parseInt(token.getName(sql));
            selCmd.setMaxRows(maxRows);
        }catch(NumberFormatException e){
            throw createSyntaxError(token, Language.STXADD_NOT_NUMBER, token.getName(sql));
        }
```

=-=-=-=-=-= Clone Class =-=-=-=-=-=-=
Location: |project://smallsql0.21_src/src/smallsql/database/SSPreparedStatement.java|(1991,107,<54,8>,<56,39>)
```
 con.log.println(sql);
        SQLParser parser = new SQLParser();
        cmd = parser.parse( con, sql );
```
Location: |project://smallsql0.21_src/src/smallsql/database/SSStatement.java|(2932,113,<107,12>,<109,41>)
```
 con.log.println(sql);
            SQLParser parser = new SQLParser();
            cmd = parser.parse(con, sql);
```

=-=-=-=-=-= Clone Class =-=-=-=-=-=-=
Location: |project://smallsql0.21_src/src/smallsql/database/ExpressionFunctionRTrim.java|(1868,86,<59,2>,<61,11>)
```
 byte[] b = new byte[length];
		System.arraycopy(bytes, 0, b, 0, length);
		return b;
```
Location: |project://smallsql0.21_src/src/smallsql/database/ExpressionFunctionLeft.java|(1845,86,<58,2>,<60,11>)
```
 byte[] b = new byte[length];
		System.arraycopy(bytes, 0, b, 0, length);
		return b;
```

=-=-=-=-=-= Clone Class =-=-=-=-=-=-=
Location: |project://smallsql0.21_src/src/smallsql/database/Table.java|(12895,376,<370,6>,<379,74>)
```
 if(serializeConnections.size() > 0){
							Iterator values = locks.values().iterator();
							while(values.hasNext()){
								TableStorePage lock = (TableStorePage)values.next();
								if(lock.con != con) return null;
							}
						}
						tabLockConnection = con;
						tabLockCount++;
						TableStorePage lock = new TableStorePage(con, this, LOCK_TAB, page);
```
Location: |project://smallsql0.21_src/src/smallsql/database/Table.java|(13602,523,<388,20>,<397,88>)
```
 if(serializeConnections.size() > 0){
                        Iterator values = locks.values().iterator();
                        while(values.hasNext()){
                            TableStorePage lock = (TableStorePage)values.next();
                            if(lock.con != con) return null;
                        }
                    }
                    tabLockConnection = con;
                    tabLockCount++;
                    TableStorePage lock = new TableStorePage(con, this, LOCK_TAB, page);
```

=-=-=-=-=-= Clone Class =-=-=-=-=-=-=
Location: |project://smallsql0.21_src/src/smallsql/junit/TestThreads.java|(3208,431,<106,12>,<117,87>)
```
 // wait until all threads are finish
            for(int i = 0; i < threadList.size(); i++){
                Thread thread = (Thread)threadList.get(i);
                thread.join(5000);
            }

            // throw the exception if one occur
            if(throwable != null){
                throw throwable;
            }

            assertEqualsRsValue(new Integer(200), "SELECT value FROM ConcurrentWrite");
```
Location: |project://smallsql0.21_src/src/smallsql/junit/TestThreads.java|(5191,431,<160,12>,<171,87>)
```
 // wait until all threads are finish
            for(int i = 0; i < threadList.size(); i++){
                Thread thread = (Thread)threadList.get(i);
                thread.join(5000);
            }

            // throw the exception if one occur
            if(throwable != null){
                throw throwable;
            }

            assertEqualsRsValue(new Integer(200), "SELECT value FROM ConcurrentWrite");
```

=-=-=-=-=-= Clone Class =-=-=-=-=-=-=
Location: |project://smallsql0.21_src/src/smallsql/database/SSDatabaseMetaData.java|(12968,123,<665,2>,<666,85>)
```
 Object[][] data   = new Object[0][];
		return new SSResultSet( st, Utils.createMemoryCommandSelect( con, colNames, data));
```
Location: |project://smallsql0.21_src/src/smallsql/database/SSDatabaseMetaData.java|(13465,123,<672,2>,<673,85>)
```
 Object[][] data   = new Object[0][];
		return new SSResultSet( st, Utils.createMemoryCommandSelect( con, colNames, data));
```
Location: |project://smallsql0.21_src/src/smallsql/database/SSDatabaseMetaData.java|(15526,123,<732,2>,<733,85>)
```
 Object[][] data   = new Object[0][];
		return new SSResultSet( st, Utils.createMemoryCommandSelect( con, colNames, data));
```
Location: |project://smallsql0.21_src/src/smallsql/database/SSDatabaseMetaData.java|(34739,123,<952,2>,<953,85>)
```
 Object[][] data   = new Object[0][];
		return new SSResultSet( st, Utils.createMemoryCommandSelect( con, colNames, data));
```

